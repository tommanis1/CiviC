INFO:root:Created 2 civ files
INFO:root:Gen fct:  0, Generating funcons for all .civ files in ./data/runs/run-20230621-124149/iteration-0-funcons
, WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.google.inject.internal.cglib.core.$ReflectUtils$1 (file:/home/l/Documents/year_4/CiviC-Semantics/dependencies/org.metaborg.sunshine2-2.5.16.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)
WARNING: Please consider reporting this to the maintainers of com.google.inject.internal.cglib.core.$ReflectUtils$1
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
12:43:01 INFO  - Building file:///home/l/Documents/year_4/CiviC-Semantics/spoofax-workspace/My-Languages/CIVIC-definition/CIVIC-Tests/data/runs/run-20230621-124149/iteration-0-funcons
12:43:01 INFO  - Building 2 sources, 0 includes of language impl. org.example:CIVIC-Editor:0.1.0-SNAPSHOT
12:43:06 INFO  - permutations_shared_mutex.civ
12:43:13 INFO  - permutations_mutex.civ
12:43:14 INFO  - Build successful

INFO:root:Created 2 fct files
INFO:root:Started: data/runs/run-20230621-124149/iteration-0-funcons/permutations_mutex.civ, outfile: data/runs/run-20230621-124149/iteration-0-funcons/permutations_mutex_output-0.txt
INFO:root:Testing: data/runs/run-20230621-124149/iteration-0-funcons/permutations_mutex.civ
INFO:root:deadlock "deadlock" "count:0,function:1,result:",[],0,"\n","count:1,function:1,result:"
INFO:root:deadlock for count 1
INFO:root:generate_a_continue_file file: data/runs/run-20230621-124149/iteration-0-funcons/permutations_mutex.civ continue_counter:1, count:1
INFO:root:found in: try { std::cout << "count:1,function:1,result:" << f0() <<std::endl; } catch (...) { std::cout << "count:1,function:1,result:" << "fail" <<std::endl;}
INFO:root:loc : 1
INFO:root:continue_file : data/runs/run-20230621-124149/iteration-0-funcons/permutations_mutex_cont_1.cpp
INFO:root:Contine civ file data/runs/run-20230621-124149/iteration-0-funcons/permutations_mutex_cont_1
INFO:root:Gen fct:  0, Generating funcons for all .civ files in ./data/runs/run-20230621-124149/iteration-0-funcons
, WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.google.inject.internal.cglib.core.$ReflectUtils$1 (file:/home/l/Documents/year_4/CiviC-Semantics/dependencies/org.metaborg.sunshine2-2.5.16.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)
WARNING: Please consider reporting this to the maintainers of com.google.inject.internal.cglib.core.$ReflectUtils$1
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
12:43:24 INFO  - Building file:///home/l/Documents/year_4/CiviC-Semantics/spoofax-workspace/My-Languages/CIVIC-definition/CIVIC-Tests/data/runs/run-20230621-124149/iteration-0-funcons
12:43:24 INFO  - Building 3 sources, 0 includes of language impl. org.example:CIVIC-Editor:0.1.0-SNAPSHOT
12:43:29 INFO  - permutations_mutex_cont_1.civ
12:43:31 INFO  - permutations_shared_mutex.civ
12:43:36 INFO  - permutations_mutex.civ
12:43:37 INFO  - Build successful

INFO:root:Testing: data/runs/run-20230621-124149/iteration-0-funcons/permutations_mutex_cont_1
INFO:root:deadlock "deadlock" "count:2,function:2,result:",0,"\n","count:3,function:2,result:",0,"\n","count:4,function:1,result:",[],0,"\n","count:5,function:1,result:"
INFO:root:deadlock for count 5
INFO:root:generate_a_continue_file file: data/runs/run-20230621-124149/iteration-0-funcons/permutations_mutex.civ continue_counter:2, count:5
INFO:root:found in: try { std::cout << "count:5,function:1,result:" << f0() <<std::endl; } catch (...) { std::cout << "count:5,function:1,result:" << "fail" <<std::endl;}

INFO:root:loc : 5
INFO:root:continue_file : data/runs/run-20230621-124149/iteration-0-funcons/permutations_mutex_cont_2.cpp
INFO:root:Contine civ file data/runs/run-20230621-124149/iteration-0-funcons/permutations_mutex_cont_2
INFO:root:Gen fct:  0, Generating funcons for all .civ files in ./data/runs/run-20230621-124149/iteration-0-funcons
, WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.google.inject.internal.cglib.core.$ReflectUtils$1 (file:/home/l/Documents/year_4/CiviC-Semantics/dependencies/org.metaborg.sunshine2-2.5.16.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)
WARNING: Please consider reporting this to the maintainers of com.google.inject.internal.cglib.core.$ReflectUtils$1
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
12:43:53 INFO  - Building file:///home/l/Documents/year_4/CiviC-Semantics/spoofax-workspace/My-Languages/CIVIC-definition/CIVIC-Tests/data/runs/run-20230621-124149/iteration-0-funcons
12:43:53 INFO  - Building 4 sources, 0 includes of language impl. org.example:CIVIC-Editor:0.1.0-SNAPSHOT
12:43:57 INFO  - permutations_shared_mutex.civ
12:44:03 INFO  - permutations_mutex.civ
12:44:04 INFO  - permutations_mutex_cont_1.civ
12:44:04 INFO  - permutations_mutex_cont_2.civ
12:44:05 INFO  - Build successful

INFO:root:Testing: data/runs/run-20230621-124149/iteration-0-funcons/permutations_mutex_cont_2
INFO:root:deadlock 0 Result:
INFO:root:Succes
INFO:root:Started: data/runs/run-20230621-124149/iteration-0-funcons/permutations_shared_mutex.civ, outfile: data/runs/run-20230621-124149/iteration-0-funcons/permutations_shared_mutex_output-0.txt
INFO:root:Testing: data/runs/run-20230621-124149/iteration-0-funcons/permutations_shared_mutex.civ
INFO:root:deadlock "deadlock" "count:0,function:1,result:",0,"\n","count:1,function:1,result:"
INFO:root:deadlock for count 1
INFO:root:generate_a_continue_file file: data/runs/run-20230621-124149/iteration-0-funcons/permutations_shared_mutex.civ continue_counter:1, count:1
INFO:root:found in: try { std::cout << "count:1,function:1,result:" << f0() <<std::endl; } catch (...) { std::cout << "count:1,function:1,result:" << "fail" <<std::endl;}
INFO:root:loc : 1
INFO:root:continue_file : data/runs/run-20230621-124149/iteration-0-funcons/permutations_shared_mutex_cont_1.cpp
INFO:root:Contine civ file data/runs/run-20230621-124149/iteration-0-funcons/permutations_shared_mutex_cont_1
INFO:root:Gen fct:  0, Generating funcons for all .civ files in ./data/runs/run-20230621-124149/iteration-0-funcons
, WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.google.inject.internal.cglib.core.$ReflectUtils$1 (file:/home/l/Documents/year_4/CiviC-Semantics/dependencies/org.metaborg.sunshine2-2.5.16.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)
WARNING: Please consider reporting this to the maintainers of com.google.inject.internal.cglib.core.$ReflectUtils$1
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
12:44:19 INFO  - Building file:///home/l/Documents/year_4/CiviC-Semantics/spoofax-workspace/My-Languages/CIVIC-definition/CIVIC-Tests/data/runs/run-20230621-124149/iteration-0-funcons
12:44:19 INFO  - Building 5 sources, 0 includes of language impl. org.example:CIVIC-Editor:0.1.0-SNAPSHOT
12:44:24 INFO  - permutations_shared_mutex_cont_1.civ
12:44:32 INFO  - permutations_mutex_cont_1.civ
12:44:32 INFO  - permutations_mutex.civ
12:44:33 INFO  - permutations_mutex_cont_2.civ
12:44:34 INFO  - permutations_shared_mutex.civ
12:44:37 INFO  - Build successful

INFO:root:Testing: data/runs/run-20230621-124149/iteration-0-funcons/permutations_shared_mutex_cont_1
INFO:root:data/runs/run-20230621-124149/iteration-0-funcons/permutations_shared_mutex_cont_1 failed -9   no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
    Pattern match failed: closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value)))) does not match [PAnnotated (PMetaVar "U") (TName "values")]
      closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value)))):
    Pattern match failed: no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))):
    Pattern match failed: no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value)) does not match [PAnnotated (PMetaVar "U") (TName "values")]
      no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value)):
    Pattern match failed: handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value) does not match [PAnnotated (PMetaVar "U") (TName "values")]
      handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value):
    Pattern match failed: handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value does not match [PAnnotated (PMetaVar "V") (TName "values"),PMetaVar "Y"]
      handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value):
    Pattern match failed: give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value does not match [PAnnotated (PMetaVar "V") (TName "values"),PMetaVar "Y"]
      give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)):
    Pattern match failed: thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given):
    Pattern match failed: sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given does not match [PAnnotated (PMetaVar "V") (TName "values"),PMetaVar "Y"]
      sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)):
    Pattern match failed: sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given) does not match [PMetaVar "Y"]
    Pattern match failed: sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))):
    Pattern match failed: sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map))))) does not match [PMetaVar "Y"]
    Pattern match failed: sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map))))) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map))):
    Pattern match failed: handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)) does not match [PMetaVar "Y"]
    Pattern match failed: handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      handle-abrupt(thread-step,sequential(print("thread-step failed"))):
    Pattern match failed: thread-step,sequential(print("thread-step failed")) does not match [PAnnotated (PMetaVar "V") (TName "values"),PMetaVar "Y"]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      closed(scope("...",postpone-after-effect(scope("...",scope("...",give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(handle-thrown(sequential(print(give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))))),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:2,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:3,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:3,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:4,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:4,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:5,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:5,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:6,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:6,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:7,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:7,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:8,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:8,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:9,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:9,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:10,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:10,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:11,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:11,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:12,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:12,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:13,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:13,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:14,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:14,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:15,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:15,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:16,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:16,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:17,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:17,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:18,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:18,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:19,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:19,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:20,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:20,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:21,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:21,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:22,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:22,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:23,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:23,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:24,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:24,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:25,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:25,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:26,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:26,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:27,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:27,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:28,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:28,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:29,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:29,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:30,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:30,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:31,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:31,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:32,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:32,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:33,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:33,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:34,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:34,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:35,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:35,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:36,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:36,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:37,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:37,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:38,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:38,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:39,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:39,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:40,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:40,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:41,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:41,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:42,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:42,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:43,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:43,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:44,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:44,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:45,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:45,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:46,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:46,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:47,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:47,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:48,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:48,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:49,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:49,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:50,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:50,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:51,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:51,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:52,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:52,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:53,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:53,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:54,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:54,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:55,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:55,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:56,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:56,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:57,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:57,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:58,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:58,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:59,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:59,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:60,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:60,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:61,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:61,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:62,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:62,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:63,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:63,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:64,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:64,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:65,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:65,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),return(decimal-natural("0")))),sequential(return(given)))))))))))))):
    Pattern match failed: scope("...",postpone-after-effect(scope("...",scope("...",give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(handle-thrown(sequential(print(give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))))),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:2,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:3,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:3,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:4,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:4,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:5,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:5,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:6,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:6,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:7,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:7,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:8,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:8,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:9,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:9,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:10,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:10,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:11,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:11,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:12,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:12,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:13,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:13,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:14,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:14,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:15,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:15,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:16,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:16,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:17,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:17,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:18,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:18,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:19,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:19,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:20,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:20,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:21,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:21,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:22,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:22,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:23,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:23,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:24,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:24,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:25,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:25,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:26,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:26,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:27,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:27,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:28,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:28,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:29,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:29,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:30,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:30,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:31,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:31,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:32,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:32,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:33,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:33,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:34,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:34,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:35,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:35,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:36,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:36,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:37,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:37,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:38,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:38,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:39,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:39,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:40,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:40,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:41,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:41,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:42,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:42,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:43,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:43,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:44,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:44,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:45,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:45,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:46,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:46,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:47,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:47,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:48,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:48,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:49,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:49,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:50,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:50,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:51,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:51,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:52,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:52,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:53,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:53,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:54,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:54,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:55,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:55,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:56,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:56,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:57,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:57,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:58,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:58,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:59,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:59,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:60,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:60,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:61,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:61,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:62,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:62,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:63,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:63,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:64,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:64,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:65,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:65,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),return(decimal-natural("0")))),sequential(return(given))))))))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",postpone-after-effect(scope("...",scope("...",give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(handle-thrown(sequential(print(give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))))),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:2,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:3,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:3,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:4,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:4,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:5,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:5,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:6,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:6,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:7,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:7,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:8,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:8,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:9,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:9,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:10,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:10,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:11,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:11,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:12,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:12,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:13,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:13,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:14,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:14,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:15,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:15,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:16,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:16,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:17,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:17,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:18,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:18,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:19,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:19,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:20,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:20,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:21,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:21,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:22,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:22,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:23,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:23,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:24,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:24,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:25,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:25,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:26,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:26,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:27,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:27,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:28,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:28,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:29,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:29,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:30,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:30,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:31,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:31,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:32,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:32,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:33,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:33,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:34,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:34,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:35,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:35,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:36,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:36,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:37,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:37,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:38,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:38,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:39,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:39,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:40,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:40,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:41,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:41,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:42,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:42,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:43,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:43,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:44,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:44,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:45,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:45,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:46,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:46,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:47,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:47,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:48,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:48,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:49,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:49,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:50,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:50,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:51,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:51,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:52,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:52,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:53,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:53,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:54,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:54,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:55,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:55,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:56,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:56,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:57,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:57,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:58,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:58,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:59,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:59,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:60,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:60,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:61,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:61,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:62,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:62,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:63,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:63,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:64,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:64,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:65,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:65,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),return(decimal-natural("0")))),sequential(return(given))))))))))))):
    Pattern match failed: map-empty,postpone-after-effect(scope("...",scope("...",give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(handle-thrown(sequential(print(give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))))),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:2,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:3,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:3,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:4,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:4,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:5,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:5,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:6,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:6,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:7,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:7,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:8,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:8,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:9,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:9,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:10,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:10,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:11,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:11,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:12,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:12,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:13,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:13,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:14,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:14,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:15,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:15,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:16,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:16,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:17,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:17,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:18,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:18,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:19,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:19,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:20,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:20,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:21,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:21,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:22,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:22,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:23,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:23,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:24,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:24,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:25,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:25,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:26,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:26,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:27,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:27,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:28,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:28,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:29,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:29,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:30,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:30,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:31,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:31,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:32,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:32,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:33,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:33,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:34,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:34,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:35,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:35,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:36,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:36,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:37,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:37,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:38,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:38,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:39,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:39,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:40,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:40,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:41,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:41,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:42,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:42,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:43,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:43,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:44,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:44,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:45,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:45,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:46,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:46,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:47,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:47,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:48,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:48,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:49,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:49,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:50,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:50,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:51,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:51,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:52,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:52,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:53,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:53,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:54,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:54,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:55,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:55,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:56,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:56,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:57,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:57,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:58,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:58,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:59,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:59,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:60,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:60,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:61,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:61,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:62,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:62,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:63,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:63,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:64,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:64,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:65,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:65,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),return(decimal-natural("0")))),sequential(return(given)))))))))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      postpone-after-effect(scope("...",scope("...",give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(handle-thrown(sequential(print(give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))))),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:2,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:3,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:3,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:4,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:4,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:5,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:5,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:6,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:6,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:7,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:7,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:8,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:8,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:9,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:9,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:10,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:10,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:11,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:11,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:12,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:12,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:13,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:13,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:14,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:14,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:15,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:15,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:16,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:16,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:17,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:17,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:18,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:18,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:19,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:19,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:20,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:20,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:21,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:21,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:22,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:22,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:23,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:23,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:24,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:24,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:25,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:25,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:26,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:26,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:27,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:27,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:28,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:28,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:29,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:29,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:30,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:30,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:31,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:31,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:32,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:32,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:33,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:33,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:34,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:34,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:35,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:35,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:36,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:36,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:37,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:37,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:38,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:38,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:39,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:39,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:40,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:40,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:41,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:41,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:42,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:42,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:43,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:43,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:44,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:44,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:45,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:45,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:46,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:46,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:47,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:47,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:48,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:48,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:49,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:49,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:50,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:50,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:51,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:51,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:52,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:52,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:53,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:53,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:54,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:54,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:55,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:55,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:56,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:56,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:57,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:57,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:58,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:58,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:59,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:59,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:60,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:60,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:61,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:61,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:62,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:62,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:63,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:63,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:64,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:64,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:65,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:65,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),return(decimal-natural("0")))),sequential(return(given)))))))))))):
    Pattern match failed: scope("...",scope("...",give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(handle-thrown(sequential(print(give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))))),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:2,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:3,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:3,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:4,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:4,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:5,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:5,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:6,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:6,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:7,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:7,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:8,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:8,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:9,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:9,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:10,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:10,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:11,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:11,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:12,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:12,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:13,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:13,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:14,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:14,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:15,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:15,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:16,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:16,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:17,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:17,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:18,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:18,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:19,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:19,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:20,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:20,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:21,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:21,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:22,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:22,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:23,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:23,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:24,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:24,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:25,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:25,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:26,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:26,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:27,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:27,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:28,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:28,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:29,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:29,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:30,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:30,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:31,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:31,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:32,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:32,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:33,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:33,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:34,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:34,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:35,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:35,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:36,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:36,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:37,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:37,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:38,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:38,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:39,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:39,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:40,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:40,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:41,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:41,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:42,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:42,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:43,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:43,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:44,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:44,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:45,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:45,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:46,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:46,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:47,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:47,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:48,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:48,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:49,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:49,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:50,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:50,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:51,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:51,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:52,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:52,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:53,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:53,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:54,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:54,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:55,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:55,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:56,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:56,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:57,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:57,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:58,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:58,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:59,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:59,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:60,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:60,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:61,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:61,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:62,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:62,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:63,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:63,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:64,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:64,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:65,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:65,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),return(decimal-natural("0")))),sequential(return(given))))))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(handle-thrown(sequential(print(give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))))),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:2,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:3,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:3,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:4,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:4,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:5,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:5,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:6,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:6,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:7,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:7,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:8,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:8,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:9,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:9,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:10,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:10,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:11,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:11,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:12,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:12,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:13,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:13,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:14,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:14,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:15,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:15,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:16,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:16,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:17,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:17,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:18,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:18,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:19,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:19,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:20,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:20,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:21,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:21,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:22,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:22,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:23,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:23,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:24,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:24,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:25,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:25,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:26,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:26,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:27,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:27,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:28,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:28,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:29,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:29,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:30,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:30,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:31,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:31,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:32,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:32,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:33,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:33,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:34,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:34,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:35,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:35,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:36,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:36,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:37,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:37,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:38,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:38,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:39,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:39,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:40,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:40,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:41,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:41,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:42,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:42,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:43,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:43,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:44,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:44,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:45,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:45,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:46,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:46,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:47,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:47,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:48,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:48,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:49,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:49,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:50,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:50,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:51,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:51,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:52,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:52,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:53,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:53,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:54,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:54,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:55,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:55,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:56,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:56,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:57,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:57,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:58,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:58,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:59,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:59,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:60,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:60,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:61,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:61,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:62,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:62,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:63,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:63,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:64,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:64,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:65,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:65,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),return(decimal-natural("0")))),sequential(return(given))))))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?))},scope("...",give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(handle-thrown(sequential(print(give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))))),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:2,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:3,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:3,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:4,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:4,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:5,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:5,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:6,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:6,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:7,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:7,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:8,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:8,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:9,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:9,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:10,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:10,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:11,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:11,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:12,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:12,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:13,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:13,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:14,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:14,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:15,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:15,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:16,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:16,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:17,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:17,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:18,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:18,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:19,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:19,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:20,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:20,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:21,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:21,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:22,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:22,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:23,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:23,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:24,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:24,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:25,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:25,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:26,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:26,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:27,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:27,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:28,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:28,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:29,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:29,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:30,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:30,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:31,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:31,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:32,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:32,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:33,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:33,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:34,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:34,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:35,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:35,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:36,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:36,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:37,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:37,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:38,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:38,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:39,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:39,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:40,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:40,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:41,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:41,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:42,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:42,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:43,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:43,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:44,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:44,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:45,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:45,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:46,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:46,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:47,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:47,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:48,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:48,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:49,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:49,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:50,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:50,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:51,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:51,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:52,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:52,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:53,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:53,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:54,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:54,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:55,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:55,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:56,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:56,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:57,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:57,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:58,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:58,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:59,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:59,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:60,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:60,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:61,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:61,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:62,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:62,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:63,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:63,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:64,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:64,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:65,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:65,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),return(decimal-natural("0")))),sequential(return(given)))))))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(handle-thrown(sequential(print(give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))))),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:2,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:3,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:3,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:4,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:4,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:5,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:5,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:6,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:6,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:7,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:7,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:8,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:8,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:9,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:9,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:10,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:10,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:11,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:11,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:12,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:12,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:13,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:13,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:14,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:14,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:15,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:15,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:16,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:16,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:17,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:17,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:18,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:18,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:19,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:19,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:20,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:20,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:21,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:21,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:22,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:22,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:23,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:23,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:24,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:24,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:25,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:25,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:26,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:26,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:27,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:27,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:28,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:28,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:29,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:29,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:30,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:30,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:31,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:31,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:32,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:32,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:33,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:33,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:34,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:34,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:35,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:35,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:36,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:36,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:37,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:37,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:38,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:38,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:39,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:39,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:40,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:40,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:41,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:41,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:42,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:42,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:43,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:43,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:44,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:44,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:45,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:45,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:46,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:46,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:47,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:47,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:48,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:48,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:49,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:49,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:50,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:50,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:51,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:51,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:52,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:52,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:53,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:53,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:54,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:54,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:55,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:55,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:56,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:56,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:57,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:57,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:58,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:58,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:59,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:59,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:60,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:60,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:61,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:61,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:62,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:62,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:63,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:63,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:64,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:64,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:65,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:65,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),return(decimal-natural("0")))),sequential(return(given)))))))))):
    Pattern match failed: {"f0" |-> variable(atom(@7),functions(tuples(values*),values)), "f1" |-> variable(atom(@8),functions(tuples(values*),values)), "f2" |-> variable(atom(@9),functions(tuples(values*),values)), "f3" |-> variable(atom(@10),functions(tuples(values*),values)), "m" |-> variable(atom(@6),references(objects())), "main" |-> variable(atom(@11),functions(tuples(values*),values))},give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(handle-thrown(sequential(print(give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))))),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:2,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:3,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:3,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:4,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:4,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:5,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:5,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:6,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:6,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:7,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:7,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:8,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:8,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:9,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:9,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:10,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:10,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:11,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:11,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:12,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:12,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:13,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:13,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:14,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:14,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:15,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:15,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:16,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:16,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:17,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:17,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:18,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:18,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:19,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:19,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:20,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:20,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:21,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:21,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:22,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:22,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:23,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:23,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:24,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:24,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:25,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:25,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:26,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:26,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:27,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:27,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:28,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:28,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:29,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:29,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:30,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:30,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:31,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:31,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:32,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:32,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:33,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:33,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:34,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:34,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:35,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:35,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:36,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:36,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:37,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:37,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:38,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:38,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:39,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:39,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:40,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:40,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:41,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:41,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:42,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:42,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:43,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:43,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:44,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:44,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:45,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:45,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:46,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:46,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:47,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:47,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:48,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:48,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:49,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:49,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:50,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:50,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:51,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:51,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:52,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:52,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:53,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:53,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:54,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:54,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:55,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:55,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:56,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:56,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:57,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:57,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:58,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:58,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:59,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:59,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:60,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:60,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:61,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:61,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:62,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:62,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:63,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:63,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:64,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:64,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:65,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:65,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),return(decimal-natural("0")))),sequential(return(given))))))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(handle-thrown(sequential(print(give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))))),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:2,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:3,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:3,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:4,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:4,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:5,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:5,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:6,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:6,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:7,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:7,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:8,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:8,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:9,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:9,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:10,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:10,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:11,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:11,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:12,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:12,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:13,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:13,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:14,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:14,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:15,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:15,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:16,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:16,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:17,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:17,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:18,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:18,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:19,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:19,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:20,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:20,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:21,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:21,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:22,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:22,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:23,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:23,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:24,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:24,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:25,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:25,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:26,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:26,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:27,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:27,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:28,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:28,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:29,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:29,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:30,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:30,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:31,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:31,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:32,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:32,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:33,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:33,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:34,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:34,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:35,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:35,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:36,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:36,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:37,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:37,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:38,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:38,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:39,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:39,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:40,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:40,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:41,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:41,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:42,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:42,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:43,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:43,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:44,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:44,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:45,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:45,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:46,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:46,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:47,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:47,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:48,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:48,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:49,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:49,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:50,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:50,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:51,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:51,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:52,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:52,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:53,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:53,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:54,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:54,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:55,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:55,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:56,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:56,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:57,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:57,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:58,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:58,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:59,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:59,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:60,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:60,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:61,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:61,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:62,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:62,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:63,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:63,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:64,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:64,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:65,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:65,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),return(decimal-natural("0")))),sequential(return(given))))))))):
    Pattern match failed: tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(handle-thrown(sequential(print(give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))))),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:2,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:3,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:3,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:4,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:4,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:5,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:5,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:6,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:6,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:7,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:7,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:8,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:8,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:9,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:9,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:10,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:10,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:11,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:11,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:12,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:12,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:13,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:13,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:14,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:14,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:15,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:15,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:16,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:16,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:17,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:17,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:18,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:18,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:19,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:19,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:20,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:20,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:21,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:21,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:22,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:22,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:23,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:23,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:24,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:24,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:25,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:25,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:26,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:26,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:27,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:27,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:28,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:28,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:29,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:29,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:30,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:30,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:31,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:31,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:32,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:32,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:33,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:33,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:34,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:34,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:35,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:35,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:36,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:36,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:37,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:37,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:38,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:38,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:39,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:39,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:40,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:40,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:41,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:41,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:42,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:42,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:43,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:43,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:44,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:44,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:45,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:45,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:46,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:46,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:47,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:47,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:48,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:48,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:49,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:49,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:50,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:50,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:51,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:51,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:52,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:52,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:53,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:53,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:54,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:54,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:55,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:55,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:56,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:56,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:57,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:57,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:58,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:58,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:59,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:59,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:60,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:60,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:61,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:61,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:62,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:62,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:63,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:63,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:64,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:64,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:65,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:65,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),return(decimal-natural("0")))),sequential(return(given)))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(handle-thrown(sequential(print(give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))))),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:2,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:3,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:3,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:4,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:4,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:5,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:5,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:6,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:6,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:7,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:7,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:8,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:8,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:9,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:9,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:10,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:10,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:11,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:11,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:12,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:12,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:13,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:13,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:14,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:14,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:15,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:15,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:16,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:16,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:17,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:17,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:18,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:18,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:19,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:19,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:20,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:20,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:21,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:21,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:22,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:22,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:23,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:23,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:24,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:24,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:25,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:25,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:26,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:26,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:27,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:27,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:28,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:28,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:29,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:29,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:30,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:30,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:31,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:31,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:32,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:32,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:33,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:33,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:34,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:34,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:35,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:35,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:36,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:36,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:37,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:37,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:38,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:38,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:39,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:39,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:40,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:40,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:41,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:41,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:42,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:42,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:43,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:43,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:44,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:44,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:45,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:45,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:46,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:46,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:47,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:47,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:48,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:48,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:49,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:49,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:50,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:50,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:51,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:51,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:52,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:52,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:53,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:53,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:54,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:54,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:55,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:55,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:56,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:56,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:57,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:57,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:58,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:58,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:59,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:59,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:60,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:60,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:61,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:61,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:62,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:62,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:63,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:63,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:64,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:64,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:65,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:65,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),return(decimal-natural("0")))),sequential(return(given)))))))):
    Pattern match failed: scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(handle-thrown(sequential(print(give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))))),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:2,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:3,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:3,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:4,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:4,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:5,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:5,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:6,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:6,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:7,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:7,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:8,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:8,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:9,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:9,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:10,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:10,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:11,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:11,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:12,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:12,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:13,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:13,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:14,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:14,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:15,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:15,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:16,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:16,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:17,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:17,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:18,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:18,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:19,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:19,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:20,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:20,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:21,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:21,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:22,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:22,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:23,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:23,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:24,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:24,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:25,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:25,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:26,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:26,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:27,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:27,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:28,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:28,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:29,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:29,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:30,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:30,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:31,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:31,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:32,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:32,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:33,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:33,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:34,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:34,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:35,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:35,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:36,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:36,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:37,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:37,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:38,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:38,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:39,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:39,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:40,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:40,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:41,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:41,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:42,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:42,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:43,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:43,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:44,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:44,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:45,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:45,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:46,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:46,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:47,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:47,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:48,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:48,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:49,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:49,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:50,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:50,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:51,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:51,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:52,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:52,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:53,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:53,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:54,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:54,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:55,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:55,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:56,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:56,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:57,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:57,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:58,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:58,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:59,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:59,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:60,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:60,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:61,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:61,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:62,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:62,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:63,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:63,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:64,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:64,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:65,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:65,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),return(decimal-natural("0")))),sequential(return(given))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(handle-thrown(sequential(print(give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))))),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:2,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:3,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:3,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:4,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:4,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:5,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:5,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:6,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:6,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:7,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:7,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:8,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:8,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:9,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:9,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:10,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:10,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:11,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:11,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:12,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:12,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:13,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:13,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:14,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:14,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:15,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:15,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:16,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:16,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:17,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:17,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:18,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:18,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:19,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:19,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:20,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:20,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:21,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:21,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:22,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:22,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:23,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:23,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:24,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:24,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:25,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:25,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:26,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:26,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:27,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:27,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:28,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:28,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:29,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:29,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:30,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:30,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:31,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:31,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:32,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:32,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:33,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:33,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:34,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:34,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:35,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:35,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:36,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:36,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:37,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:37,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:38,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:38,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:39,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:39,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:40,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:40,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:41,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:41,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:42,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:42,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:43,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:43,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:44,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:44,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:45,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:45,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:46,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:46,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:47,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:47,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:48,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:48,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:49,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:49,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:50,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:50,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:51,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:51,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:52,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:52,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:53,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:53,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:54,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:54,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:55,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:55,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:56,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:56,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:57,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:57,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:58,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:58,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:59,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:59,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:60,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:60,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:61,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:61,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:62,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:62,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:63,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:63,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:64,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:64,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:65,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:65,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),return(decimal-natural("0")))),sequential(return(given))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?)), "f0" |-> variable(atom(@7),functions(tuples(values*),values)), "f1" |-> variable(atom(@8),functions(tuples(values*),values)), "f2" |-> variable(atom(@9),functions(tuples(values*),values)), "f3" |-> variable(atom(@10),functions(tuples(values*),values)), "m" |-> variable(atom(@6),references(objects())), "main" |-> variable(atom(@11),functions(tuples(values*),values))},scope("...",handle-return(scope("...",give(handle-return(sequential(handle-thrown(sequential(print(give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))))),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:2,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:3,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:3,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:4,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:4,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:5,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:5,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:6,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:6,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:7,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:7,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:8,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:8,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:9,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:9,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:10,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:10,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:11,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:11,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:12,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:12,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:13,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:13,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:14,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:14,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:15,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:15,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:16,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:16,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:17,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:17,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:18,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:18,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:19,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:19,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:20,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:20,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:21,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:21,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:22,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:22,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:23,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:23,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:24,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:24,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:25,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:25,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:26,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:26,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:27,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:27,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:28,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:28,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:29,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:29,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:30,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:30,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:31,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:31,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:32,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:32,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:33,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:33,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:34,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:34,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:35,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:35,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:36,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:36,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:37,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:37,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:38,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:38,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:39,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:39,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:40,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:40,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:41,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:41,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:42,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:42,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:43,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:43,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:44,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:44,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:45,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:45,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:46,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:46,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:47,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:47,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:48,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:48,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:49,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:49,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:50,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:50,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:51,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:51,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:52,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:52,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:53,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:53,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:54,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:54,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:55,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:55,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:56,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:56,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:57,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:57,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:58,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:58,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:59,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:59,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:60,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:60,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:61,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:61,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:62,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:62,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:63,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:63,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:64,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:64,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:65,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:65,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),return(decimal-natural("0")))),sequential(return(given)))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(scope("...",give(handle-return(sequential(handle-thrown(sequential(print(give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))))),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:2,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:3,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:3,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:4,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:4,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:5,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:5,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:6,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:6,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:7,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:7,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:8,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:8,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:9,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:9,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:10,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:10,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:11,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:11,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:12,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:12,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:13,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:13,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:14,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:14,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:15,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:15,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:16,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:16,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:17,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:17,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:18,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:18,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:19,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:19,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:20,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:20,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:21,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:21,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:22,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:22,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:23,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:23,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:24,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:24,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:25,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:25,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:26,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:26,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:27,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:27,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:28,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:28,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:29,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:29,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:30,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:30,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:31,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:31,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:32,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:32,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:33,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:33,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:34,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:34,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:35,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:35,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:36,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:36,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:37,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:37,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:38,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:38,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:39,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:39,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:40,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:40,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:41,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:41,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:42,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:42,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:43,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:43,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:44,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:44,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:45,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:45,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:46,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:46,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:47,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:47,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:48,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:48,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:49,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:49,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:50,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:50,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:51,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:51,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:52,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:52,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:53,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:53,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:54,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:54,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:55,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:55,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:56,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:56,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:57,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:57,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:58,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:58,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:59,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:59,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:60,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:60,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:61,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:61,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:62,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:62,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:63,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:63,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:64,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:64,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:65,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:65,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),return(decimal-natural("0")))),sequential(return(given)))))):
    Pattern match failed: map-empty,handle-return(scope("...",give(handle-return(sequential(handle-thrown(sequential(print(give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))))),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:2,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:3,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:3,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:4,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:4,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:5,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:5,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:6,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:6,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:7,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:7,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:8,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:8,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:9,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:9,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:10,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:10,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:11,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:11,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:12,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:12,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:13,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:13,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:14,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:14,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:15,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:15,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:16,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:16,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:17,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:17,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:18,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:18,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:19,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:19,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:20,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:20,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:21,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:21,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:22,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:22,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:23,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:23,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:24,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:24,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:25,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:25,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:26,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:26,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:27,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:27,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:28,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:28,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:29,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:29,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:30,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:30,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:31,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:31,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:32,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:32,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:33,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:33,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:34,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:34,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:35,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:35,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:36,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:36,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:37,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:37,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:38,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:38,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:39,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:39,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:40,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:40,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:41,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:41,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:42,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:42,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:43,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:43,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:44,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:44,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:45,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:45,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:46,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:46,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:47,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:47,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:48,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:48,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:49,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:49,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:50,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:50,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:51,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:51,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:52,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:52,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:53,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:53,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:54,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:54,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:55,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:55,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:56,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:56,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:57,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:57,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:58,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:58,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:59,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:59,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:60,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:60,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:61,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:61,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:62,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:62,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:63,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:63,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:64,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:64,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:65,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:65,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),return(decimal-natural("0")))),sequential(return(given))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(scope("...",give(handle-return(sequential(handle-thrown(sequential(print(give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))))),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:2,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:3,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:3,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:4,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:4,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:5,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:5,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:6,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:6,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:7,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:7,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:8,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:8,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:9,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:9,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:10,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:10,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:11,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:11,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:12,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:12,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:13,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:13,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:14,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:14,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:15,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:15,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:16,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:16,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:17,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:17,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:18,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:18,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:19,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:19,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:20,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:20,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:21,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:21,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:22,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:22,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:23,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:23,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:24,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:24,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:25,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:25,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:26,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:26,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:27,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:27,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:28,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:28,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:29,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:29,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:30,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:30,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:31,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:31,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:32,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:32,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:33,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:33,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:34,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:34,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:35,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:35,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:36,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:36,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:37,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:37,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:38,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:38,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:39,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:39,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:40,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:40,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:41,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:41,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:42,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:42,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:43,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:43,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:44,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:44,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:45,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:45,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:46,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:46,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:47,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:47,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:48,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:48,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:49,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:49,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:50,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:50,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:51,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:51,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:52,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:52,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:53,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:53,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:54,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:54,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:55,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:55,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:56,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:56,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:57,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:57,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:58,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:58,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:59,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:59,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:60,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:60,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:61,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:61,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:62,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:62,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:63,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:63,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:64,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:64,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:65,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:65,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),return(decimal-natural("0")))),sequential(return(given))))):
    Pattern match failed: scope("...",give(handle-return(sequential(handle-thrown(sequential(print(give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))))),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:2,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:3,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:3,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:4,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:4,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:5,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:5,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:6,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:6,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:7,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:7,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:8,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:8,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:9,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:9,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:10,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:10,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:11,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:11,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:12,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:12,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:13,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:13,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:14,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:14,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:15,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:15,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:16,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:16,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:17,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:17,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:18,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:18,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:19,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:19,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:20,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:20,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:21,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:21,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:22,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:22,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:23,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:23,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:24,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:24,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:25,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:25,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:26,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:26,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:27,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:27,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:28,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:28,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:29,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:29,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:30,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:30,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:31,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:31,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:32,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:32,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:33,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:33,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:34,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:34,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:35,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:35,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:36,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:36,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:37,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:37,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:38,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:38,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:39,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:39,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:40,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:40,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:41,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:41,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:42,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:42,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:43,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:43,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:44,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:44,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:45,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:45,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:46,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:46,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:47,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:47,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:48,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:48,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:49,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:49,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:50,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:50,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:51,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:51,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:52,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:52,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:53,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:53,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:54,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:54,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:55,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:55,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:56,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:56,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:57,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:57,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:58,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:58,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:59,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:59,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:60,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:60,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:61,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:61,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:62,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:62,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:63,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:63,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:64,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:64,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:65,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:65,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),return(decimal-natural("0")))),sequential(return(given)))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",give(handle-return(sequential(handle-thrown(sequential(print(give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))))),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:2,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:3,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:3,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:4,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:4,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:5,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:5,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:6,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:6,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:7,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:7,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:8,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:8,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:9,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:9,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:10,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:10,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:11,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:11,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:12,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:12,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:13,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:13,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:14,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:14,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:15,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:15,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:16,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:16,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:17,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:17,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:18,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:18,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:19,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:19,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:20,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:20,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:21,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:21,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:22,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:22,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:23,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:23,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:24,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:24,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:25,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:25,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:26,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:26,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:27,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:27,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:28,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:28,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:29,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:29,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:30,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:30,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:31,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:31,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:32,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:32,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:33,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:33,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:34,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:34,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:35,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:35,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:36,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:36,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:37,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:37,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:38,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:38,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:39,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:39,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:40,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:40,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:41,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:41,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:42,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:42,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:43,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:43,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:44,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:44,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:45,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:45,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:46,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:46,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:47,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:47,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:48,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:48,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:49,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:49,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:50,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:50,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:51,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:51,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:52,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:52,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:53,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:53,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:54,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:54,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:55,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:55,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:56,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:56,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:57,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:57,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:58,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:58,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:59,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:59,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:60,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:60,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:61,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:61,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:62,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:62,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:63,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:63,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:64,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:64,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:65,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:65,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),return(decimal-natural("0")))),sequential(return(given)))):
    Pattern match failed: map-empty,give(handle-return(sequential(handle-thrown(sequential(print(give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))))),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:2,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:3,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:3,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:4,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:4,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:5,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:5,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:6,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:6,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:7,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:7,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:8,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:8,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:9,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:9,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:10,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:10,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:11,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:11,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:12,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:12,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:13,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:13,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:14,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:14,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:15,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:15,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:16,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:16,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:17,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:17,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:18,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:18,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:19,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:19,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:20,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:20,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:21,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:21,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:22,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:22,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:23,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:23,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:24,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:24,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:25,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:25,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:26,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:26,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:27,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:27,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:28,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:28,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:29,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:29,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:30,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:30,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:31,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:31,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:32,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:32,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:33,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:33,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:34,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:34,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:35,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:35,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:36,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:36,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:37,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:37,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:38,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:38,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:39,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:39,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:40,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:40,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:41,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:41,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:42,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:42,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:43,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:43,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:44,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:44,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:45,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:45,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:46,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:46,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:47,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:47,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:48,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:48,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:49,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:49,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:50,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:50,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:51,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:51,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:52,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:52,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:53,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:53,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:54,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:54,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:55,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:55,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:56,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:56,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:57,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:57,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:58,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:58,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:59,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:59,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:60,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:60,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:61,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:61,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:62,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:62,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:63,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:63,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:64,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:64,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:65,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:65,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),return(decimal-natural("0")))),sequential(return(given))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(sequential(handle-thrown(sequential(print(give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))))),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:2,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:3,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:3,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:4,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:4,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:5,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:5,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:6,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:6,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:7,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:7,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:8,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:8,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:9,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:9,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:10,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:10,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:11,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:11,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:12,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:12,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:13,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:13,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:14,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:14,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:15,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:15,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:16,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:16,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:17,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:17,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:18,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:18,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:19,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:19,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:20,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:20,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:21,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:21,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:22,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:22,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:23,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:23,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:24,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:24,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:25,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:25,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:26,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:26,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:27,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:27,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:28,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:28,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:29,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:29,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:30,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:30,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:31,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:31,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:32,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:32,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:33,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:33,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:34,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:34,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:35,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:35,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:36,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:36,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:37,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:37,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:38,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:38,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:39,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:39,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:40,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:40,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:41,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:41,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:42,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:42,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:43,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:43,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:44,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:44,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:45,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:45,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:46,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:46,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:47,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:47,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:48,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:48,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:49,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:49,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:50,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:50,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:51,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:51,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:52,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:52,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:53,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:53,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:54,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:54,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:55,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:55,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:56,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:56,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:57,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:57,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:58,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:58,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:59,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:59,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:60,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:60,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:61,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:61,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:62,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:62,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:63,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:63,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:64,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:64,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:65,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:65,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),return(decimal-natural("0")))):
    Pattern match failed: sequential(handle-thrown(sequential(print(give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))))),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:2,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:3,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:3,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:4,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:4,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:5,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:5,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:6,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:6,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:7,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:7,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:8,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:8,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:9,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:9,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:10,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:10,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:11,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:11,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:12,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:12,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:13,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:13,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:14,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:14,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:15,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:15,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:16,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:16,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:17,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:17,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:18,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:18,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:19,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:19,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:20,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:20,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:21,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:21,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:22,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:22,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:23,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:23,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:24,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:24,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:25,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:25,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:26,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:26,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:27,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:27,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:28,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:28,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:29,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:29,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:30,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:30,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:31,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:31,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:32,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:32,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:33,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:33,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:34,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:34,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:35,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:35,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:36,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:36,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:37,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:37,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:38,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:38,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:39,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:39,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:40,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:40,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:41,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:41,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:42,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:42,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:43,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:43,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:44,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:44,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:45,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:45,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:46,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:46,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:47,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:47,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:48,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:48,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:49,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:49,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:50,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:50,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:51,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:51,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:52,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:52,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:53,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:53,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:54,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:54,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:55,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:55,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:56,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:56,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:57,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:57,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:58,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:58,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:59,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:59,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:60,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:60,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:61,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:61,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:62,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:62,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:63,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:63,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:64,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:64,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:65,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:65,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),return(decimal-natural("0"))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(handle-thrown(sequential(print(give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))))),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:2,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:3,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:3,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:4,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:4,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:5,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:5,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:6,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:6,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:7,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:7,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:8,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:8,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:9,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:9,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:10,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:10,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:11,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:11,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:12,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:12,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:13,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:13,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:14,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:14,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:15,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:15,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:16,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:16,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:17,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:17,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:18,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:18,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:19,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:19,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:20,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:20,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:21,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:21,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:22,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:22,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:23,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:23,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:24,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:24,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:25,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:25,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:26,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:26,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:27,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:27,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:28,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:28,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:29,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:29,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:30,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:30,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:31,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:31,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:32,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:32,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:33,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:33,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:34,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:34,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:35,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:35,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:36,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:36,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:37,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:37,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:38,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:38,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:39,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:39,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:40,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:40,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:41,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:41,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:42,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:42,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:43,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:43,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:44,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:44,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:45,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:45,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:46,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:46,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:47,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:47,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:48,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:48,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:49,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:49,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:50,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:50,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:51,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:51,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:52,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:52,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:53,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:53,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:54,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:54,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:55,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:55,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:56,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:56,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:57,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:57,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:58,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:58,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:59,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:59,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:60,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:60,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:61,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:61,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:62,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:62,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:63,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:63,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:64,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:64,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:65,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:65,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),return(decimal-natural("0"))):
    Pattern match failed: handle-thrown(sequential(print(give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))))),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:2,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:3,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:3,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:4,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:4,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:5,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:5,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:6,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:6,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:7,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:7,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:8,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:8,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:9,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:9,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:10,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:10,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:11,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:11,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:12,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:12,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:13,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:13,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:14,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:14,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:15,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:15,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:16,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:16,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:17,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:17,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:18,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:18,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:19,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:19,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:20,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:20,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:21,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:21,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:22,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:22,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:23,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:23,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:24,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:24,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:25,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:25,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:26,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:26,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:27,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:27,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:28,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:28,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:29,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:29,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:30,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:30,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:31,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:31,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:32,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:32,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:33,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:33,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:34,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:34,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:35,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:35,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:36,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:36,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:37,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:37,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:38,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:38,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:39,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:39,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:40,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:40,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:41,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:41,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:42,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:42,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:43,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:43,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:44,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:44,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:45,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:45,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:46,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:46,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:47,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:47,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:48,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:48,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:49,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:49,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:50,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:50,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:51,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:51,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:52,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:52,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:53,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:53,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:54,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:54,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:55,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:55,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:56,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:56,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:57,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:57,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:58,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:58,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:59,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:59,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:60,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:60,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:61,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:61,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:62,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:62,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:63,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:63,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:64,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:64,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:65,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:65,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: handle-thrown(sequential(print(give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))))),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:2,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:3,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:3,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:4,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:4,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:5,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:5,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:6,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:6,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:7,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:7,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:8,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:8,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:9,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:9,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:10,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:10,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:11,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:11,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:12,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:12,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:13,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:13,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:14,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:14,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:15,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:15,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:16,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:16,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:17,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:17,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:18,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:18,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:19,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:19,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:20,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:20,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:21,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:21,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:22,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:22,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:23,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:23,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:24,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:24,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:25,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:25,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:26,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:26,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:27,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:27,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:28,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:28,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:29,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:29,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:30,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:30,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:31,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:31,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:32,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:32,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:33,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:33,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:34,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:34,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:35,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:35,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:36,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:36,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:37,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:37,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:38,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:38,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:39,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:39,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:40,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:40,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:41,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:41,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:42,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:42,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:43,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:43,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:44,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:44,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:45,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:45,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:46,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:46,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:47,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:47,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:48,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:48,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:49,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:49,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:50,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:50,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:51,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:51,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:52,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:52,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:53,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:53,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:54,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:54,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:55,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:55,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:56,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:56,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:57,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:57,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:58,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:58,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:59,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:59,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:60,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:60,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:61,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:61,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:62,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:62,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:63,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:63,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:64,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:64,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:65,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:65,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      handle-thrown(sequential(print(give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))))),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:2,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))):
    Pattern match failed: sequential(print(give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))))),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:2,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl"))) does not match [PAnnotated (PMetaVar "V") (TName "values"),PMetaVar "Y"]
      sequential(print(give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))))),print(lookup(assigned(bound("_std")),"std::endl"))):
    Pattern match failed: print(give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))))),print(lookup(assigned(bound("_std")),"std::endl")) does not match [PMetaVar "Y"]
    Pattern match failed: print(give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))))),print(lookup(assigned(bound("_std")),"std::endl")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given))))))))):
    Pattern match failed: tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))):
    Pattern match failed: scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?)), "f0" |-> variable(atom(@7),functions(tuples(values*),values)), "f1" |-> variable(atom(@8),functions(tuples(values*),values)), "f2" |-> variable(atom(@9),functions(tuples(values*),values)), "f3" |-> variable(atom(@10),functions(tuples(values*),values)), "m" |-> variable(atom(@6),references(objects())), "main" |-> variable(atom(@11),functions(tuples(values*),values))},scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))):
    Pattern match failed: map-empty,handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given))))):
    Pattern match failed: scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))):
    Pattern match failed: map-empty,give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))):
    Pattern match failed: sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))):
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))):
    Pattern match failed: reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))):
    Pattern match failed: tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))):
    Pattern match failed: scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?))},scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))):
    Pattern match failed: {"rw-lock" |-> variable(atom(@5),syncs()), "self" |-> variable(atom(@13),pointers(objects()))},handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))):
    Pattern match failed: thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))):
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))):
    Pattern match failed: reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))):
    Pattern match failed: tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))):
    Pattern match failed: scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?))},scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))):
    Pattern match failed: {"rw-lock" |-> variable(atom(@5),syncs()), "self" |-> variable(atom(@13),pointers(objects()))},handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))):
    Pattern match failed: thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))):
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))):
    Pattern match failed: reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))):
    Pattern match failed: tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))):
    Pattern match failed: scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?))},scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))):
    Pattern match failed: {"rw-lock" |-> variable(atom(@5),syncs()), "self" |-> variable(atom(@13),pointers(objects()))},handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))):
    Pattern match failed: thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))):
    Pattern match failed: map-empty,give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))):
    Pattern match failed: sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))):
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))):
    Pattern match failed: reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))):
    Pattern match failed: tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))):
    Pattern match failed: scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?))},scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))):
    Pattern match failed: {"rw-lock" |-> variable(atom(@5),syncs()), "self" |-> variable(atom(@13),pointers(objects()))},handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))):
    Pattern match failed: thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))):
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))):
    Pattern match failed: reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))):
    Pattern match failed: tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))):
    Pattern match failed: scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?))},scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))):
    Pattern match failed: {"rw-lock" |-> variable(atom(@5),syncs()), "self" |-> variable(atom(@13),pointers(objects()))},handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))):
    Pattern match failed: thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))):
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))):
    Pattern match failed: reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))):
    Pattern match failed: tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))):
    Pattern match failed: scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?))},scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))):
    Pattern match failed: {"rw-lock" |-> variable(atom(@5),syncs()), "self" |-> variable(atom(@13),pointers(objects()))},handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))):
    Pattern match failed: thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))):
    Pattern match failed: map-empty,give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))):
    Pattern match failed: sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))):
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))):
    Pattern match failed: reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))):
    Pattern match failed: tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))):
    Pattern match failed: scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?))},scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))):
    Pattern match failed: {"rw-lock" |-> variable(atom(@5),syncs()), "self" |-> variable(atom(@13),pointers(objects()))},handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))):
    Pattern match failed: thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))):
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))):
    Pattern match failed: reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))):
    Pattern match failed: tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))):
    Pattern match failed: scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?))},scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))):
    Pattern match failed: {"rw-lock" |-> variable(atom(@5),syncs()), "self" |-> variable(atom(@13),pointers(objects()))},handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))):
    Pattern match failed: thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))):
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))):
    Pattern match failed: reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))):
    Pattern match failed: tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))):
    Pattern match failed: scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?))},scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))):
    Pattern match failed: {"rw-lock" |-> variable(atom(@5),syncs()), "self" |-> variable(atom(@13),pointers(objects()))},handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))):
    Pattern match failed: thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(print(give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))))),print(lookup(assigned(bound("_std")),"std::endl"))):
    Pattern match failed: print(give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))))),print(lookup(assigned(bound("_std")),"std::endl")) does not match [PMetaVar "Y"]
    Pattern match failed: print(give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))))),print(lookup(assigned(bound("_std")),"std::endl")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given))))))))):
    Pattern match failed: tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))):
    Pattern match failed: scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?)), "f0" |-> variable(atom(@7),functions(tuples(values*),values)), "f1" |-> variable(atom(@8),functions(tuples(values*),values)), "f2" |-> variable(atom(@9),functions(tuples(values*),values)), "f3" |-> variable(atom(@10),functions(tuples(values*),values)), "m" |-> variable(atom(@6),references(objects())), "main" |-> variable(atom(@11),functions(tuples(values*),values))},scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))):
    Pattern match failed: map-empty,handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given))))):
    Pattern match failed: scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))):
    Pattern match failed: map-empty,give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))):
    Pattern match failed: sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))):
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))):
    Pattern match failed: reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))):
    Pattern match failed: tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))):
    Pattern match failed: scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?))},scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))):
    Pattern match failed: {"rw-lock" |-> variable(atom(@5),syncs()), "self" |-> variable(atom(@13),pointers(objects()))},handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))):
    Pattern match failed: thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))):
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))):
    Pattern match failed: reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))):
    Pattern match failed: tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))):
    Pattern match failed: scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?))},scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))):
    Pattern match failed: {"rw-lock" |-> variable(atom(@5),syncs()), "self" |-> variable(atom(@13),pointers(objects()))},handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))):
    Pattern match failed: thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))):
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))):
    Pattern match failed: reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))):
    Pattern match failed: tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))):
    Pattern match failed: scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?))},scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))):
    Pattern match failed: {"rw-lock" |-> variable(atom(@5),syncs()), "self" |-> variable(atom(@13),pointers(objects()))},handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))):
    Pattern match failed: thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))):
    Pattern match failed: map-empty,give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))):
    Pattern match failed: sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))):
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))):
    Pattern match failed: reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))):
    Pattern match failed: tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))):
    Pattern match failed: scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?))},scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))):
    Pattern match failed: {"rw-lock" |-> variable(atom(@5),syncs()), "self" |-> variable(atom(@13),pointers(objects()))},handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))):
    Pattern match failed: thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))):
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))):
    Pattern match failed: reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))):
    Pattern match failed: tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))):
    Pattern match failed: scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?))},scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))):
    Pattern match failed: {"rw-lock" |-> variable(atom(@5),syncs()), "self" |-> variable(atom(@13),pointers(objects()))},handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))):
    Pattern match failed: thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))):
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))):
    Pattern match failed: reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))):
    Pattern match failed: tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))):
    Pattern match failed: scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?))},scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))):
    Pattern match failed: {"rw-lock" |-> variable(atom(@5),syncs()), "self" |-> variable(atom(@13),pointers(objects()))},handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))):
    Pattern match failed: thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))):
    Pattern match failed: map-empty,give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))):
    Pattern match failed: sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))):
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))):
    Pattern match failed: reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))):
    Pattern match failed: tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))):
    Pattern match failed: scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?))},scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))):
    Pattern match failed: {"rw-lock" |-> variable(atom(@5),syncs()), "self" |-> variable(atom(@13),pointers(objects()))},handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))):
    Pattern match failed: thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))):
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))):
    Pattern match failed: reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))):
    Pattern match failed: tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))):
    Pattern match failed: scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?))},scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))):
    Pattern match failed: {"rw-lock" |-> variable(atom(@5),syncs()), "self" |-> variable(atom(@13),pointers(objects()))},handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))):
    Pattern match failed: thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))):
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))):
    Pattern match failed: reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))):
    Pattern match failed: tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))):
    Pattern match failed: scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?))},scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))):
    Pattern match failed: {"rw-lock" |-> variable(atom(@5),syncs()), "self" |-> variable(atom(@13),pointers(objects()))},handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))):
    Pattern match failed: thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(print(give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))))),print(lookup(assigned(bound("_std")),"std::endl"))):
    Pattern match failed: print(give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))))),print(lookup(assigned(bound("_std")),"std::endl")) does not match [PMetaVar "Y"]
    Pattern match failed: print(give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))))),print(lookup(assigned(bound("_std")),"std::endl")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given))))))))):
    Pattern match failed: tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))):
    Pattern match failed: scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?)), "f0" |-> variable(atom(@7),functions(tuples(values*),values)), "f1" |-> variable(atom(@8),functions(tuples(values*),values)), "f2" |-> variable(atom(@9),functions(tuples(values*),values)), "f3" |-> variable(atom(@10),functions(tuples(values*),values)), "m" |-> variable(atom(@6),references(objects())), "main" |-> variable(atom(@11),functions(tuples(values*),values))},scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))):
    Pattern match failed: map-empty,handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given))))):
    Pattern match failed: scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))):
    Pattern match failed: map-empty,give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))):
    Pattern match failed: sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))):
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))):
    Pattern match failed: reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))):
    Pattern match failed: tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))):
    Pattern match failed: scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?))},scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))):
    Pattern match failed: {"rw-lock" |-> variable(atom(@5),syncs()), "self" |-> variable(atom(@13),pointers(objects()))},handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))):
    Pattern match failed: thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))):
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))):
    Pattern match failed: reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))):
    Pattern match failed: tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))):
    Pattern match failed: scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?))},scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))):
    Pattern match failed: {"rw-lock" |-> variable(atom(@5),syncs()), "self" |-> variable(atom(@13),pointers(objects()))},handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))):
    Pattern match failed: thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))):
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))):
    Pattern match failed: reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))):
    Pattern match failed: tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))):
    Pattern match failed: scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?))},scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))):
    Pattern match failed: {"rw-lock" |-> variable(atom(@5),syncs()), "self" |-> variable(atom(@13),pointers(objects()))},handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))):
    Pattern match failed: thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))):
    Pattern match failed: map-empty,give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))):
    Pattern match failed: sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))):
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))):
    Pattern match failed: reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))):
    Pattern match failed: tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))):
    Pattern match failed: scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?))},scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))):
    Pattern match failed: {"rw-lock" |-> variable(atom(@5),syncs()), "self" |-> variable(atom(@13),pointers(objects()))},handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))):
    Pattern match failed: thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))):
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))):
    Pattern match failed: reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))):
    Pattern match failed: tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))):
    Pattern match failed: scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?))},scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))):
    Pattern match failed: {"rw-lock" |-> variable(atom(@5),syncs()), "self" |-> variable(atom(@13),pointers(objects()))},handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))):
    Pattern match failed: thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))):
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))):
    Pattern match failed: reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))):
    Pattern match failed: tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))):
    Pattern match failed: scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?))},scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))):
    Pattern match failed: {"rw-lock" |-> variable(atom(@5),syncs()), "self" |-> variable(atom(@13),pointers(objects()))},handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))):
    Pattern match failed: thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))):
    Pattern match failed: map-empty,give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))):
    Pattern match failed: sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))):
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))):
    Pattern match failed: reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))):
    Pattern match failed: tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))):
    Pattern match failed: scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?))},scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))):
    Pattern match failed: {"rw-lock" |-> variable(atom(@5),syncs()), "self" |-> variable(atom(@13),pointers(objects()))},handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))):
    Pattern match failed: thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))):
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))):
    Pattern match failed: reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))):
    Pattern match failed: tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))):
    Pattern match failed: scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?))},scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))):
    Pattern match failed: {"rw-lock" |-> variable(atom(@5),syncs()), "self" |-> variable(atom(@13),pointers(objects()))},handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))):
    Pattern match failed: thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))):
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))):
    Pattern match failed: reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))):
    Pattern match failed: tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))):
    Pattern match failed: scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?))},scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))):
    Pattern match failed: {"rw-lock" |-> variable(atom(@5),syncs()), "self" |-> variable(atom(@13),pointers(objects()))},handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))):
    Pattern match failed: thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(handle-thrown(sequential(print(give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))))),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:2,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:3,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:3,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:4,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:4,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:5,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:5,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:6,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:6,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:7,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:7,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:8,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:8,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:9,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:9,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:10,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:10,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:11,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:11,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:12,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:12,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:13,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:13,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:14,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:14,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:15,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:15,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:16,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:16,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:17,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:17,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:18,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:18,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:19,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:19,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:20,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:20,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:21,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:21,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:22,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:22,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:23,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:23,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:24,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:24,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:25,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:25,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:26,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:26,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:27,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:27,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:28,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:28,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:29,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:29,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:30,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:30,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:31,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:31,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:32,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:32,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:33,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:33,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:34,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:34,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:35,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:35,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:36,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:36,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:37,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:37,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:38,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:38,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:39,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:39,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:40,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:40,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:41,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:41,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:42,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:42,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:43,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:43,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:44,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:44,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:45,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:45,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:46,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:46,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:47,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:47,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:48,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:48,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:49,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:49,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:50,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:50,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:51,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:51,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:52,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:52,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:53,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:53,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:54,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:54,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:55,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:55,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:56,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:56,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:57,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:57,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:58,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:58,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:59,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:59,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:60,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:60,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:61,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:61,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:62,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:62,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:63,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:63,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:64,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:64,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:65,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:65,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),return(decimal-natural("0"))):
    Pattern match failed: handle-thrown(sequential(print(give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))))),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:2,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:3,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:3,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:4,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:4,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:5,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:5,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:6,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:6,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:7,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:7,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:8,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:8,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:9,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:9,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:10,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:10,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:11,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:11,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:12,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:12,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:13,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:13,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:14,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:14,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:15,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:15,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:16,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:16,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:17,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:17,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:18,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:18,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:19,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:19,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:20,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:20,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:21,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:21,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:22,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:22,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:23,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:23,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:24,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:24,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:25,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:25,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:26,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:26,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:27,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:27,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:28,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:28,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:29,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:29,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:30,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:30,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:31,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:31,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:32,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:32,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:33,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:33,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:34,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:34,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:35,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:35,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:36,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:36,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:37,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:37,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:38,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:38,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:39,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:39,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:40,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:40,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:41,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:41,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:42,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:42,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:43,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:43,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:44,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:44,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:45,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:45,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:46,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:46,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:47,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:47,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:48,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:48,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:49,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:49,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:50,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:50,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:51,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:51,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:52,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:52,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:53,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:53,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:54,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:54,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:55,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:55,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:56,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:56,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:57,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:57,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:58,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:58,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:59,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:59,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:60,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:60,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:61,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:61,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:62,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:62,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:63,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:63,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:64,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:64,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:65,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:65,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: handle-thrown(sequential(print(give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))))),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:2,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:3,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:3,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:4,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:4,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:5,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:5,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:6,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:6,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:7,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:7,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:8,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:8,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:9,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:9,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:10,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:10,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:11,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:11,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:12,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:12,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:13,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:13,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:14,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:14,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:15,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:15,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:16,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:16,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:17,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:17,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:18,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:18,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:19,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:19,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:20,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:20,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:21,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:21,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:22,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:22,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:23,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:23,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:24,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:24,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:25,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:25,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:26,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:26,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:27,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:27,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:28,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:28,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:29,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:29,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:30,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:30,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:31,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:31,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:32,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:32,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:33,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:33,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:34,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:34,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:35,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:35,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:36,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:36,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:37,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:37,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:38,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:38,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:39,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:39,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:40,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:40,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:41,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:41,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:42,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:42,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:43,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:43,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:44,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:44,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:45,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:45,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:46,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:46,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:47,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:47,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:48,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:48,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:49,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:49,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:50,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:50,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:51,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:51,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:52,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:52,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:53,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:53,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:54,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:54,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:55,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:55,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:56,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:56,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:57,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:57,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:58,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:58,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:59,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:59,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:60,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:60,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:61,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:61,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:62,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:62,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:63,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:63,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:64,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:64,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:65,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:65,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      handle-thrown(sequential(print(give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))))),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:2,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))):
    Pattern match failed: sequential(print(give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))))),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:2,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl"))) does not match [PAnnotated (PMetaVar "V") (TName "values"),PMetaVar "Y"]
      sequential(print(give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))))),print(lookup(assigned(bound("_std")),"std::endl"))):
    Pattern match failed: print(give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))))),print(lookup(assigned(bound("_std")),"std::endl")) does not match [PMetaVar "Y"]
    Pattern match failed: print(give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))))),print(lookup(assigned(bound("_std")),"std::endl")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given))))))))):
    Pattern match failed: tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))):
    Pattern match failed: scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?)), "f0" |-> variable(atom(@7),functions(tuples(values*),values)), "f1" |-> variable(atom(@8),functions(tuples(values*),values)), "f2" |-> variable(atom(@9),functions(tuples(values*),values)), "f3" |-> variable(atom(@10),functions(tuples(values*),values)), "m" |-> variable(atom(@6),references(objects())), "main" |-> variable(atom(@11),functions(tuples(values*),values))},scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))):
    Pattern match failed: map-empty,handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given))))):
    Pattern match failed: scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))):
    Pattern match failed: map-empty,give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))):
    Pattern match failed: sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))):
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))):
    Pattern match failed: reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))):
    Pattern match failed: tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))):
    Pattern match failed: scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?))},scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))):
    Pattern match failed: {"rw-lock" |-> variable(atom(@5),syncs()), "self" |-> variable(atom(@13),pointers(objects()))},handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))):
    Pattern match failed: thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))):
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))):
    Pattern match failed: reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))):
    Pattern match failed: tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))):
    Pattern match failed: scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?))},scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))):
    Pattern match failed: {"rw-lock" |-> variable(atom(@5),syncs()), "self" |-> variable(atom(@13),pointers(objects()))},handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))):
    Pattern match failed: thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))):
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))):
    Pattern match failed: reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))):
    Pattern match failed: tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))):
    Pattern match failed: scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?))},scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))):
    Pattern match failed: {"rw-lock" |-> variable(atom(@5),syncs()), "self" |-> variable(atom(@13),pointers(objects()))},handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))):
    Pattern match failed: thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))):
    Pattern match failed: map-empty,give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))):
    Pattern match failed: sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))):
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))):
    Pattern match failed: reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))):
    Pattern match failed: tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))):
    Pattern match failed: scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?))},scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))):
    Pattern match failed: {"rw-lock" |-> variable(atom(@5),syncs()), "self" |-> variable(atom(@13),pointers(objects()))},handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))):
    Pattern match failed: thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))):
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))):
    Pattern match failed: reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))):
    Pattern match failed: tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))):
    Pattern match failed: scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?))},scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))):
    Pattern match failed: {"rw-lock" |-> variable(atom(@5),syncs()), "self" |-> variable(atom(@13),pointers(objects()))},handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))):
    Pattern match failed: thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))):
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))):
    Pattern match failed: reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))):
    Pattern match failed: tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))):
    Pattern match failed: scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?))},scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))):
    Pattern match failed: {"rw-lock" |-> variable(atom(@5),syncs()), "self" |-> variable(atom(@13),pointers(objects()))},handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))):
    Pattern match failed: thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))):
    Pattern match failed: map-empty,give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))):
    Pattern match failed: sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))):
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))):
    Pattern match failed: reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))):
    Pattern match failed: tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))):
    Pattern match failed: scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?))},scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))):
    Pattern match failed: {"rw-lock" |-> variable(atom(@5),syncs()), "self" |-> variable(atom(@13),pointers(objects()))},handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))):
    Pattern match failed: thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))):
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))):
    Pattern match failed: reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))):
    Pattern match failed: tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))):
    Pattern match failed: scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?))},scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))):
    Pattern match failed: {"rw-lock" |-> variable(atom(@5),syncs()), "self" |-> variable(atom(@13),pointers(objects()))},handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))):
    Pattern match failed: thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))):
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))):
    Pattern match failed: reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))):
    Pattern match failed: tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))):
    Pattern match failed: scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?))},scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))):
    Pattern match failed: {"rw-lock" |-> variable(atom(@5),syncs()), "self" |-> variable(atom(@13),pointers(objects()))},handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))):
    Pattern match failed: thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(print(give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))))),print(lookup(assigned(bound("_std")),"std::endl"))):
    Pattern match failed: print(give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))))),print(lookup(assigned(bound("_std")),"std::endl")) does not match [PMetaVar "Y"]
    Pattern match failed: print(give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))))),print(lookup(assigned(bound("_std")),"std::endl")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given))))))))):
    Pattern match failed: tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))):
    Pattern match failed: scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?)), "f0" |-> variable(atom(@7),functions(tuples(values*),values)), "f1" |-> variable(atom(@8),functions(tuples(values*),values)), "f2" |-> variable(atom(@9),functions(tuples(values*),values)), "f3" |-> variable(atom(@10),functions(tuples(values*),values)), "m" |-> variable(atom(@6),references(objects())), "main" |-> variable(atom(@11),functions(tuples(values*),values))},scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))):
    Pattern match failed: map-empty,handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given))))):
    Pattern match failed: scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))):
    Pattern match failed: map-empty,give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))):
    Pattern match failed: sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))):
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))):
    Pattern match failed: reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))):
    Pattern match failed: tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))):
    Pattern match failed: scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?))},scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))):
    Pattern match failed: {"rw-lock" |-> variable(atom(@5),syncs()), "self" |-> variable(atom(@13),pointers(objects()))},handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))):
    Pattern match failed: thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))):
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))):
    Pattern match failed: reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))):
    Pattern match failed: tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))):
    Pattern match failed: scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?))},scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))):
    Pattern match failed: {"rw-lock" |-> variable(atom(@5),syncs()), "self" |-> variable(atom(@13),pointers(objects()))},handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))):
    Pattern match failed: thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))):
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))):
    Pattern match failed: reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))):
    Pattern match failed: tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))):
    Pattern match failed: scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?))},scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))):
    Pattern match failed: {"rw-lock" |-> variable(atom(@5),syncs()), "self" |-> variable(atom(@13),pointers(objects()))},handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))):
    Pattern match failed: thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))):
    Pattern match failed: map-empty,give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))):
    Pattern match failed: sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))):
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))):
    Pattern match failed: reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))):
    Pattern match failed: tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))):
    Pattern match failed: scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?))},scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))):
    Pattern match failed: {"rw-lock" |-> variable(atom(@5),syncs()), "self" |-> variable(atom(@13),pointers(objects()))},handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))):
    Pattern match failed: thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))):
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))):
    Pattern match failed: reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))):
    Pattern match failed: tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))):
    Pattern match failed: scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?))},scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))):
    Pattern match failed: {"rw-lock" |-> variable(atom(@5),syncs()), "self" |-> variable(atom(@13),pointers(objects()))},handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))):
    Pattern match failed: thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))):
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))):
    Pattern match failed: reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))):
    Pattern match failed: tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))):
    Pattern match failed: scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?))},scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))):
    Pattern match failed: {"rw-lock" |-> variable(atom(@5),syncs()), "self" |-> variable(atom(@13),pointers(objects()))},handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))):
    Pattern match failed: thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))):
    Pattern match failed: map-empty,give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))):
    Pattern match failed: sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))):
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))):
    Pattern match failed: reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))):
    Pattern match failed: tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))):
    Pattern match failed: scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?))},scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))):
    Pattern match failed: {"rw-lock" |-> variable(atom(@5),syncs()), "self" |-> variable(atom(@13),pointers(objects()))},handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))):
    Pattern match failed: thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))):
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))):
    Pattern match failed: reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))):
    Pattern match failed: tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))):
    Pattern match failed: scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?))},scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))):
    Pattern match failed: {"rw-lock" |-> variable(atom(@5),syncs()), "self" |-> variable(atom(@13),pointers(objects()))},handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))):
    Pattern match failed: thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))):
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))):
    Pattern match failed: reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))):
    Pattern match failed: tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))):
    Pattern match failed: scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?))},scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))):
    Pattern match failed: {"rw-lock" |-> variable(atom(@5),syncs()), "self" |-> variable(atom(@13),pointers(objects()))},handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))):
    Pattern match failed: thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(print(give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))))),print(lookup(assigned(bound("_std")),"std::endl"))):
    Pattern match failed: print(give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))))),print(lookup(assigned(bound("_std")),"std::endl")) does not match [PMetaVar "Y"]
    Pattern match failed: print(give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))))),print(lookup(assigned(bound("_std")),"std::endl")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given))))))))):
    Pattern match failed: tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))):
    Pattern match failed: scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?)), "f0" |-> variable(atom(@7),functions(tuples(values*),values)), "f1" |-> variable(atom(@8),functions(tuples(values*),values)), "f2" |-> variable(atom(@9),functions(tuples(values*),values)), "f3" |-> variable(atom(@10),functions(tuples(values*),values)), "m" |-> variable(atom(@6),references(objects())), "main" |-> variable(atom(@11),functions(tuples(values*),values))},scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))):
    Pattern match failed: map-empty,handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given))))):
    Pattern match failed: scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))):
    Pattern match failed: map-empty,give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))):
    Pattern match failed: sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))):
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))):
    Pattern match failed: reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))):
    Pattern match failed: tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))):
    Pattern match failed: scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?))},scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))):
    Pattern match failed: {"rw-lock" |-> variable(atom(@5),syncs()), "self" |-> variable(atom(@13),pointers(objects()))},handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))):
    Pattern match failed: thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))):
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))):
    Pattern match failed: reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))):
    Pattern match failed: tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))):
    Pattern match failed: scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?))},scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))):
    Pattern match failed: {"rw-lock" |-> variable(atom(@5),syncs()), "self" |-> variable(atom(@13),pointers(objects()))},handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))):
    Pattern match failed: thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))):
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))):
    Pattern match failed: reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))):
    Pattern match failed: tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))):
    Pattern match failed: scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?))},scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))):
    Pattern match failed: {"rw-lock" |-> variable(atom(@5),syncs()), "self" |-> variable(atom(@13),pointers(objects()))},handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))):
    Pattern match failed: thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))):
    Pattern match failed: map-empty,give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))):
    Pattern match failed: sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))):
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))):
    Pattern match failed: reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))):
    Pattern match failed: tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))):
    Pattern match failed: scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?))},scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))):
    Pattern match failed: {"rw-lock" |-> variable(atom(@5),syncs()), "self" |-> variable(atom(@13),pointers(objects()))},handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))):
    Pattern match failed: thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))):
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))):
    Pattern match failed: reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))):
    Pattern match failed: tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))):
    Pattern match failed: scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?))},scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))):
    Pattern match failed: {"rw-lock" |-> variable(atom(@5),syncs()), "self" |-> variable(atom(@13),pointers(objects()))},handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))):
    Pattern match failed: thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))):
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))):
    Pattern match failed: reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))):
    Pattern match failed: tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))):
    Pattern match failed: scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?))},scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))):
    Pattern match failed: {"rw-lock" |-> variable(atom(@5),syncs()), "self" |-> variable(atom(@13),pointers(objects()))},handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))):
    Pattern match failed: thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))):
    Pattern match failed: map-empty,give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))):
    Pattern match failed: sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))):
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))):
    Pattern match failed: reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))):
    Pattern match failed: tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))):
    Pattern match failed: scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?))},scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))):
    Pattern match failed: {"rw-lock" |-> variable(atom(@5),syncs()), "self" |-> variable(atom(@13),pointers(objects()))},handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))):
    Pattern match failed: thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))):
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))):
    Pattern match failed: reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))):
    Pattern match failed: tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))):
    Pattern match failed: scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?))},scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))):
    Pattern match failed: {"rw-lock" |-> variable(atom(@5),syncs()), "self" |-> variable(atom(@13),pointers(objects()))},handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))):
    Pattern match failed: thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))):
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))):
    Pattern match failed: reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))):
    Pattern match failed: tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))):
    Pattern match failed: scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?))},scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))):
    Pattern match failed: {"rw-lock" |-> variable(atom(@5),syncs()), "self" |-> variable(atom(@13),pointers(objects()))},handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))):
    Pattern match failed: thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(handle-thrown(sequential(print(give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))))),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:2,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:3,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:3,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:4,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:4,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:5,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:5,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:6,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:6,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:7,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:7,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:8,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:8,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:9,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:9,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:10,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:10,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:11,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:11,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:12,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:12,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:13,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:13,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:14,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:14,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:15,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:15,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:16,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:16,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:17,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:17,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:18,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:18,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:19,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:19,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:20,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:20,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:21,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:21,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:22,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:22,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:23,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:23,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:24,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:24,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:25,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:25,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:26,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:26,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:27,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:27,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:28,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:28,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:29,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:29,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:30,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:30,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:31,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:31,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:32,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:32,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:33,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:33,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:34,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:34,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:35,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:35,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:36,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:36,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:37,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:37,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:38,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:38,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:39,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:39,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:40,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:40,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:41,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:41,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:42,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:42,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:43,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:43,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:44,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:44,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:45,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:45,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:46,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:46,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:47,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:47,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:48,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:48,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:49,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:49,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:50,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:50,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:51,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:51,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:52,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:52,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:53,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:53,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:54,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:54,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:55,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:55,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:56,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:56,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:57,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:57,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:58,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:58,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:59,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:59,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:60,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:60,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:61,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:61,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:62,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:62,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:63,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:63,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:64,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:64,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:65,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:65,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),return(decimal-natural("0"))):
    Pattern match failed: handle-thrown(sequential(print(give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))))),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:2,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:3,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:3,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:4,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:4,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:5,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:5,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:6,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:6,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:7,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:7,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:8,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:8,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:9,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:9,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:10,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:10,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:11,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:11,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:12,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:12,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:13,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:13,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:14,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:14,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:15,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:15,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:16,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:16,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:17,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:17,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:18,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:18,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:19,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:19,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:20,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:20,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:21,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:21,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:22,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:22,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:23,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:23,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:24,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:24,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:25,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:25,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:26,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:26,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:27,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:27,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:28,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:28,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:29,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:29,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:30,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:30,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:31,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:31,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:32,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:32,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:33,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:33,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:34,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:34,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:35,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:35,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:36,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:36,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:37,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:37,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:38,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:38,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:39,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:39,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:40,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:40,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:41,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:41,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:42,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:42,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:43,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:43,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:44,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:44,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:45,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:45,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:46,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:46,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:47,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:47,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:48,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:48,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:49,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:49,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:50,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:50,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:51,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:51,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:52,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:52,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:53,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:53,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:54,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:54,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:55,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:55,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:56,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:56,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:57,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:57,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:58,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:58,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:59,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:59,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:60,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:60,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:61,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:61,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:62,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:62,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:63,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:63,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:64,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:64,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:65,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:65,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: handle-thrown(sequential(print(give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))))),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:2,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:3,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:3,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:4,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:4,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:5,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:5,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:6,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:6,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:7,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:7,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:8,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:8,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:9,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:9,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:10,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:10,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:11,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:11,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:12,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:12,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:13,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:13,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:14,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:14,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:15,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:15,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:16,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:16,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:17,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:17,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:18,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:18,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:19,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:19,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:20,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:20,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:21,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:21,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:22,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:22,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:23,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:23,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:24,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:24,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:25,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:25,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:26,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:26,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:27,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:27,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:28,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:28,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:29,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:29,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:30,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:30,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:31,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:31,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:32,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:32,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:33,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:33,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:34,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:34,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:35,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:35,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:36,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:36,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:37,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:37,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:38,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:38,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:39,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:39,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:40,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:40,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:41,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:41,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:42,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:42,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:43,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:43,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:44,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:44,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:45,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:45,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:46,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:46,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:47,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:47,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:48,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:48,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:49,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:49,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:50,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:50,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:51,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:51,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:52,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:52,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:53,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:53,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:54,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:54,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:55,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:55,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:56,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:56,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:57,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:57,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:58,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:58,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:59,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:59,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:60,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:60,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:61,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:61,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:62,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:62,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:63,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:63,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:64,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:64,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:65,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:65,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      handle-thrown(sequential(print(give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))))),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:2,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))):
    Pattern match failed: sequential(print(give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))))),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:2,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl"))) does not match [PAnnotated (PMetaVar "V") (TName "values"),PMetaVar "Y"]
      sequential(print(give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))))),print(lookup(assigned(bound("_std")),"std::endl"))):
    Pattern match failed: print(give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))))),print(lookup(assigned(bound("_std")),"std::endl")) does not match [PMetaVar "Y"]
    Pattern match failed: print(give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))))),print(lookup(assigned(bound("_std")),"std::endl")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given))))))))):
    Pattern match failed: tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))):
    Pattern match failed: scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?)), "f0" |-> variable(atom(@7),functions(tuples(values*),values)), "f1" |-> variable(atom(@8),functions(tuples(values*),values)), "f2" |-> variable(atom(@9),functions(tuples(values*),values)), "f3" |-> variable(atom(@10),functions(tuples(values*),values)), "m" |-> variable(atom(@6),references(objects())), "main" |-> variable(atom(@11),functions(tuples(values*),values))},scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))):
    Pattern match failed: map-empty,handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given))))):
    Pattern match failed: scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))):
    Pattern match failed: map-empty,give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))):
    Pattern match failed: sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))):
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))):
    Pattern match failed: reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))):
    Pattern match failed: tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))):
    Pattern match failed: scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?))},scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))):
    Pattern match failed: {"rw-lock" |-> variable(atom(@5),syncs()), "self" |-> variable(atom(@13),pointers(objects()))},handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))):
    Pattern match failed: thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))):
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))):
    Pattern match failed: reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))):
    Pattern match failed: tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))):
    Pattern match failed: scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?))},scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))):
    Pattern match failed: {"rw-lock" |-> variable(atom(@5),syncs()), "self" |-> variable(atom(@13),pointers(objects()))},handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))):
    Pattern match failed: thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))):
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))):
    Pattern match failed: reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))):
    Pattern match failed: tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))):
    Pattern match failed: scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?))},scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))):
    Pattern match failed: {"rw-lock" |-> variable(atom(@5),syncs()), "self" |-> variable(atom(@13),pointers(objects()))},handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))):
    Pattern match failed: thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))):
    Pattern match failed: map-empty,give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))):
    Pattern match failed: sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))):
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))):
    Pattern match failed: reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))):
    Pattern match failed: tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))):
    Pattern match failed: scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?))},scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))):
    Pattern match failed: {"rw-lock" |-> variable(atom(@5),syncs()), "self" |-> variable(atom(@13),pointers(objects()))},handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))):
    Pattern match failed: thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))):
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))):
    Pattern match failed: reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))):
    Pattern match failed: tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))):
    Pattern match failed: scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?))},scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))):
    Pattern match failed: {"rw-lock" |-> variable(atom(@5),syncs()), "self" |-> variable(atom(@13),pointers(objects()))},handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))):
    Pattern match failed: thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))):
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))):
    Pattern match failed: reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))):
    Pattern match failed: tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))):
    Pattern match failed: scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?))},scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))):
    Pattern match failed: {"rw-lock" |-> variable(atom(@5),syncs()), "self" |-> variable(atom(@13),pointers(objects()))},handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))):
    Pattern match failed: thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))):
    Pattern match failed: map-empty,give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))):
    Pattern match failed: sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))):
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))):
    Pattern match failed: reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))):
    Pattern match failed: tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))):
    Pattern match failed: scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?))},scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))):
    Pattern match failed: {"rw-lock" |-> variable(atom(@5),syncs()), "self" |-> variable(atom(@13),pointers(objects()))},handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))):
    Pattern match failed: thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))):
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))):
    Pattern match failed: reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))):
    Pattern match failed: tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))):
    Pattern match failed: scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?))},scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))):
    Pattern match failed: {"rw-lock" |-> variable(atom(@5),syncs()), "self" |-> variable(atom(@13),pointers(objects()))},handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))):
    Pattern match failed: thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))):
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))):
    Pattern match failed: reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))):
    Pattern match failed: tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))):
    Pattern match failed: scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?))},scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))):
    Pattern match failed: {"rw-lock" |-> variable(atom(@5),syncs()), "self" |-> variable(atom(@13),pointers(objects()))},handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))):
    Pattern match failed: thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(print(give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))))),print(lookup(assigned(bound("_std")),"std::endl"))):
    Pattern match failed: print(give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))))),print(lookup(assigned(bound("_std")),"std::endl")) does not match [PMetaVar "Y"]
    Pattern match failed: print(give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))))),print(lookup(assigned(bound("_std")),"std::endl")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given))))))))):
    Pattern match failed: tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))):
    Pattern match failed: scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?)), "f0" |-> variable(atom(@7),functions(tuples(values*),values)), "f1" |-> variable(atom(@8),functions(tuples(values*),values)), "f2" |-> variable(atom(@9),functions(tuples(values*),values)), "f3" |-> variable(atom(@10),functions(tuples(values*),values)), "m" |-> variable(atom(@6),references(objects())), "main" |-> variable(atom(@11),functions(tuples(values*),values))},scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))):
    Pattern match failed: map-empty,handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given))))):
    Pattern match failed: scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))):
    Pattern match failed: map-empty,give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))):
    Pattern match failed: sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))):
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))):
    Pattern match failed: reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))):
    Pattern match failed: tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))):
    Pattern match failed: scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?))},scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))):
    Pattern match failed: {"rw-lock" |-> variable(atom(@5),syncs()), "self" |-> variable(atom(@13),pointers(objects()))},handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))):
    Pattern match failed: thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))):
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))):
    Pattern match failed: reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))):
    Pattern match failed: tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))):
    Pattern match failed: scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?))},scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))):
    Pattern match failed: {"rw-lock" |-> variable(atom(@5),syncs()), "self" |-> variable(atom(@13),pointers(objects()))},handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))):
    Pattern match failed: thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))):
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))):
    Pattern match failed: reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))):
    Pattern match failed: tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))):
    Pattern match failed: scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?))},scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))):
    Pattern match failed: {"rw-lock" |-> variable(atom(@5),syncs()), "self" |-> variable(atom(@13),pointers(objects()))},handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))):
    Pattern match failed: thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))):
    Pattern match failed: map-empty,give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))):
    Pattern match failed: sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))):
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))):
    Pattern match failed: reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))):
    Pattern match failed: tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))):
    Pattern match failed: scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?))},scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))):
    Pattern match failed: {"rw-lock" |-> variable(atom(@5),syncs()), "self" |-> variable(atom(@13),pointers(objects()))},handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))):
    Pattern match failed: thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))):
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))):
    Pattern match failed: reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))):
    Pattern match failed: tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))):
    Pattern match failed: scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?))},scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))):
    Pattern match failed: {"rw-lock" |-> variable(atom(@5),syncs()), "self" |-> variable(atom(@13),pointers(objects()))},handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))):
    Pattern match failed: thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))):
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))):
    Pattern match failed: reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))):
    Pattern match failed: tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))):
    Pattern match failed: scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?))},scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))):
    Pattern match failed: {"rw-lock" |-> variable(atom(@5),syncs()), "self" |-> variable(atom(@13),pointers(objects()))},handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))):
    Pattern match failed: thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))):
    Pattern match failed: map-empty,give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))):
    Pattern match failed: sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))):
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))):
    Pattern match failed: reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))):
    Pattern match failed: tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))):
    Pattern match failed: scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?))},scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))):
    Pattern match failed: {"rw-lock" |-> variable(atom(@5),syncs()), "self" |-> variable(atom(@13),pointers(objects()))},handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))):
    Pattern match failed: thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))):
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))):
    Pattern match failed: reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))):
    Pattern match failed: tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))):
    Pattern match failed: scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?))},scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))):
    Pattern match failed: {"rw-lock" |-> variable(atom(@5),syncs()), "self" |-> variable(atom(@13),pointers(objects()))},handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))):
    Pattern match failed: thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))):
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))):
    Pattern match failed: reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))):
    Pattern match failed: tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))):
    Pattern match failed: scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?))},scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))):
    Pattern match failed: {"rw-lock" |-> variable(atom(@5),syncs()), "self" |-> variable(atom(@13),pointers(objects()))},handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))):
    Pattern match failed: thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(print(give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))))),print(lookup(assigned(bound("_std")),"std::endl"))):
    Pattern match failed: print(give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))))),print(lookup(assigned(bound("_std")),"std::endl")) does not match [PMetaVar "Y"]
    Pattern match failed: print(give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))))),print(lookup(assigned(bound("_std")),"std::endl")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given))))))))):
    Pattern match failed: tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))):
    Pattern match failed: scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?)), "f0" |-> variable(atom(@7),functions(tuples(values*),values)), "f1" |-> variable(atom(@8),functions(tuples(values*),values)), "f2" |-> variable(atom(@9),functions(tuples(values*),values)), "f3" |-> variable(atom(@10),functions(tuples(values*),values)), "m" |-> variable(atom(@6),references(objects())), "main" |-> variable(atom(@11),functions(tuples(values*),values))},scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))):
    Pattern match failed: map-empty,handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given))))):
    Pattern match failed: scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))):
    Pattern match failed: map-empty,give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))):
    Pattern match failed: sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))):
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))):
    Pattern match failed: reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))):
    Pattern match failed: tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))):
    Pattern match failed: scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?))},scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))):
    Pattern match failed: {"rw-lock" |-> variable(atom(@5),syncs()), "self" |-> variable(atom(@13),pointers(objects()))},handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))):
    Pattern match failed: thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))):
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))):
    Pattern match failed: reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))):
    Pattern match failed: tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))):
    Pattern match failed: scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?))},scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))):
    Pattern match failed: {"rw-lock" |-> variable(atom(@5),syncs()), "self" |-> variable(atom(@13),pointers(objects()))},handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))):
    Pattern match failed: thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))):
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))):
    Pattern match failed: reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))):
    Pattern match failed: tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))):
    Pattern match failed: scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?))},scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))):
    Pattern match failed: {"rw-lock" |-> variable(atom(@5),syncs()), "self" |-> variable(atom(@13),pointers(objects()))},handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))):
    Pattern match failed: thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))):
    Pattern match failed: map-empty,give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))):
    Pattern match failed: sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))):
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))):
    Pattern match failed: reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))):
    Pattern match failed: tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))):
    Pattern match failed: scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?))},scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))):
    Pattern match failed: {"rw-lock" |-> variable(atom(@5),syncs()), "self" |-> variable(atom(@13),pointers(objects()))},handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))):
    Pattern match failed: thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))):
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))):
    Pattern match failed: reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))):
    Pattern match failed: tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))):
    Pattern match failed: scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?))},scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))):
    Pattern match failed: {"rw-lock" |-> variable(atom(@5),syncs()), "self" |-> variable(atom(@13),pointers(objects()))},handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))):
    Pattern match failed: thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))):
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))):
    Pattern match failed: reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))):
    Pattern match failed: tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))):
    Pattern match failed: scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?))},scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))):
    Pattern match failed: {"rw-lock" |-> variable(atom(@5),syncs()), "self" |-> variable(atom(@13),pointers(objects()))},handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))):
    Pattern match failed: thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))):
    Pattern match failed: map-empty,give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))):
    Pattern match failed: sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))):
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))):
    Pattern match failed: reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))):
    Pattern match failed: tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))):
    Pattern match failed: scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?))},scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))):
    Pattern match failed: {"rw-lock" |-> variable(atom(@5),syncs()), "self" |-> variable(atom(@13),pointers(objects()))},handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))):
    Pattern match failed: thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))):
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))):
    Pattern match failed: reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))):
    Pattern match failed: tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))):
    Pattern match failed: scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?))},scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))):
    Pattern match failed: {"rw-lock" |-> variable(atom(@5),syncs()), "self" |-> variable(atom(@13),pointers(objects()))},handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))):
    Pattern match failed: thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))):
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))):
    Pattern match failed: reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))):
    Pattern match failed: tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))):
    Pattern match failed: scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?))},scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))):
    Pattern match failed: {"rw-lock" |-> variable(atom(@5),syncs()), "self" |-> variable(atom(@13),pointers(objects()))},handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))):
    Pattern match failed: thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",give(handle-return(sequential(handle-thrown(sequential(print(give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))))),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:2,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:3,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:3,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:4,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:4,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:5,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:5,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:6,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:6,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:7,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:7,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:8,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:8,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:9,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:9,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:10,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:10,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:11,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:11,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:12,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:12,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:13,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:13,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:14,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:14,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:15,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:15,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:16,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:16,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:17,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:17,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:18,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:18,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:19,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:19,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:20,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:20,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:21,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:21,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:22,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:22,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:23,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:23,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:24,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:24,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:25,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:25,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:26,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:26,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:27,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:27,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:28,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:28,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:29,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:29,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:30,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:30,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:31,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:31,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:32,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:32,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:33,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:33,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:34,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:34,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:35,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:35,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:36,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:36,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:37,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:37,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:38,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:38,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:39,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:39,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:40,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:40,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:41,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:41,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:42,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:42,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:43,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:43,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:44,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:44,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:45,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:45,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:46,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:46,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:47,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:47,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:48,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:48,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:49,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:49,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:50,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:50,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:51,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:51,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:52,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:52,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:53,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:53,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:54,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:54,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:55,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:55,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:56,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:56,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:57,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:57,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:58,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:58,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:59,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:59,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:60,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:60,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:61,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:61,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:62,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:62,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:63,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:63,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:64,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:64,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:65,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:65,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),return(decimal-natural("0")))),sequential(return(given)))):
    Pattern match failed: map-empty,give(handle-return(sequential(handle-thrown(sequential(print(give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))))),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:2,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:3,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:3,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:4,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:4,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:5,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:5,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:6,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:6,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:7,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:7,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:8,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:8,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:9,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:9,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:10,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:10,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:11,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:11,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:12,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:12,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:13,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:13,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:14,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:14,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:15,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:15,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:16,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:16,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:17,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:17,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:18,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:18,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:19,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:19,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:20,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:20,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:21,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:21,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:22,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:22,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:23,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:23,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:24,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:24,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:25,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:25,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:26,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:26,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:27,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:27,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:28,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:28,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:29,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:29,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:30,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:30,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:31,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:31,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:32,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:32,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:33,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:33,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:34,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:34,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:35,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:35,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:36,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:36,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:37,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:37,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:38,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:38,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:39,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:39,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:40,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:40,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:41,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:41,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:42,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:42,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:43,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:43,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:44,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:44,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:45,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:45,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:46,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:46,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:47,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:47,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:48,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:48,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:49,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:49,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:50,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:50,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:51,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:51,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:52,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:52,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:53,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:53,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:54,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:54,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:55,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:55,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:56,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:56,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:57,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:57,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:58,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:58,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:59,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:59,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:60,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:60,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:61,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:61,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:62,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:62,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:63,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:63,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:64,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:64,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:65,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:65,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),return(decimal-natural("0")))),sequential(return(given))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(sequential(handle-thrown(sequential(print(give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))))),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:2,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:3,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:3,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:4,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:4,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:5,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:5,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:6,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:6,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:7,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:7,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:8,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:8,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:9,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:9,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:10,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:10,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:11,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:11,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:12,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:12,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:13,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:13,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:14,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:14,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:15,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:15,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:16,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:16,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:17,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:17,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:18,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:18,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:19,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:19,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:20,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:20,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:21,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:21,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:22,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:22,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:23,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:23,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:24,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:24,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:25,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:25,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:26,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:26,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:27,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:27,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:28,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:28,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:29,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:29,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:30,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:30,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:31,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:31,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:32,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:32,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:33,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:33,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:34,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:34,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:35,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:35,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:36,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:36,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:37,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:37,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:38,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:38,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:39,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:39,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:40,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:40,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:41,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:41,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:42,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:42,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:43,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:43,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:44,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:44,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:45,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:45,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:46,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:46,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:47,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:47,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:48,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:48,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:49,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:49,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:50,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:50,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:51,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:51,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:52,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:52,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:53,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:53,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:54,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:54,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:55,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:55,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:56,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:56,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:57,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:57,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:58,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:58,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:59,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:59,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:60,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:60,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:61,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:61,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:62,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:62,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:63,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:63,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:64,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:64,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:65,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:65,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),return(decimal-natural("0")))):
    Pattern match failed: sequential(handle-thrown(sequential(print(give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))))),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:2,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:3,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:3,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:4,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:4,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:5,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:5,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:6,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:6,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:7,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:7,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:8,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:8,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:9,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:9,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:10,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:10,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:11,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:11,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:12,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:12,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:13,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:13,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:14,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:14,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:15,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:15,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:16,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:16,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:17,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:17,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:18,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:18,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:19,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:19,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:20,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:20,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:21,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:21,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:22,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:22,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:23,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:23,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:24,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:24,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:25,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:25,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:26,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:26,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:27,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:27,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:28,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:28,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:29,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:29,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:30,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:30,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:31,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:31,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:32,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:32,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:33,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:33,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:34,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:34,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:35,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:35,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:36,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:36,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:37,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:37,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:38,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:38,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:39,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:39,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:40,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:40,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:41,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:41,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:42,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:42,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:43,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:43,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:44,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:44,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:45,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:45,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:46,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:46,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:47,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:47,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:48,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:48,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:49,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:49,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:50,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:50,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:51,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:51,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:52,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:52,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:53,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:53,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:54,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:54,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:55,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:55,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:56,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:56,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:57,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:57,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:58,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:58,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:59,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:59,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:60,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:60,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:61,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:61,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:62,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:62,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:63,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:63,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:64,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:64,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:65,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:65,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),return(decimal-natural("0"))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(handle-thrown(sequential(print(give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))))),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:2,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:3,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:3,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:4,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:4,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:5,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:5,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:6,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:6,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:7,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:7,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:8,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:8,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:9,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:9,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:10,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:10,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:11,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:11,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:12,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:12,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:13,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:13,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:14,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:14,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:15,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:15,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:16,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:16,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:17,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:17,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:18,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:18,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:19,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:19,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:20,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:20,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:21,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:21,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:22,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:22,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:23,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:23,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:24,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:24,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:25,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:25,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:26,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:26,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:27,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:27,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:28,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:28,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:29,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:29,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:30,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:30,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:31,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:31,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:32,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:32,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:33,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:33,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:34,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:34,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:35,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:35,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:36,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:36,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:37,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:37,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:38,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:38,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:39,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:39,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:40,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:40,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:41,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:41,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:42,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:42,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:43,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:43,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:44,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:44,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:45,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:45,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:46,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:46,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:47,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:47,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:48,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:48,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:49,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:49,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:50,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:50,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:51,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:51,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:52,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:52,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:53,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:53,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:54,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:54,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:55,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:55,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:56,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:56,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:57,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:57,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:58,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:58,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:59,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:59,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:60,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:60,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:61,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:61,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:62,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:62,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:63,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:63,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:64,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:64,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:65,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:65,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),return(decimal-natural("0"))):
    Pattern match failed: handle-thrown(sequential(print(give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))))),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:2,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:3,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:3,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:4,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:4,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:5,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:5,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:6,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:6,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:7,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:7,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:8,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:8,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:9,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:9,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:10,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:10,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:11,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:11,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:12,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:12,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:13,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:13,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:14,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:14,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:15,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:15,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:16,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:16,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:17,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:17,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:18,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:18,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:19,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:19,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:20,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:20,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:21,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:21,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:22,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:22,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:23,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:23,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:24,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:24,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:25,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:25,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:26,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:26,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:27,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:27,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:28,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:28,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:29,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:29,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:30,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:30,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:31,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:31,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:32,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:32,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:33,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:33,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:34,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:34,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:35,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:35,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:36,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:36,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:37,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:37,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:38,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:38,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:39,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:39,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:40,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:40,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:41,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:41,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:42,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:42,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:43,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:43,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:44,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:44,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:45,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:45,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:46,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:46,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:47,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:47,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:48,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:48,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:49,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:49,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:50,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:50,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:51,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:51,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:52,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:52,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:53,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:53,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:54,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:54,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:55,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:55,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:56,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:56,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:57,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:57,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:58,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:58,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:59,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:59,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:60,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:60,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:61,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:61,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:62,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:62,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:63,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:63,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:64,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:64,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:65,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:65,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: handle-thrown(sequential(print(give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))))),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:2,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:3,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:3,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:4,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:4,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:5,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:5,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:6,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:6,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:7,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:7,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:8,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:8,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:9,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:9,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:10,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:10,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:11,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:11,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:12,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:12,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:13,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:13,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:14,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:14,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:15,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:15,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:16,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:16,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:17,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:17,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:18,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:18,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:19,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:19,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:20,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:20,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:21,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:21,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:22,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:22,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:23,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:23,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:24,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:24,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:25,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:25,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:26,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:26,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:27,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:27,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:28,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:28,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:29,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:29,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:30,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:30,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:31,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:31,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:32,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:32,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:33,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:33,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:34,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:34,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:35,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:35,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:36,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:36,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:37,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:37,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:38,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:38,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:39,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:39,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:40,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:40,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:41,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:41,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:42,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:42,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:43,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:43,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:44,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:44,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:45,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:45,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:46,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:46,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:47,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:47,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:48,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:48,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:49,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:49,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:50,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:50,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:51,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:51,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:52,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:52,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:53,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:53,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:54,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:54,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:55,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:55,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:56,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:56,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:57,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:57,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:58,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:58,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:59,function:4,result:"),print(apply(assigned(bound("f3")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:59,function:4,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:60,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:60,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:61,function:3,result:"),print(apply(assigned(bound("f2")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:61,function:3,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:62,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:62,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:63,function:2,result:"),print(apply(assigned(bound("f1")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:63,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:64,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:64,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),handle-thrown(sequential(print("count:65,function:1,result:"),print(apply(assigned(bound("f0")),tuple())),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:65,function:1,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      handle-thrown(sequential(print(give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))))),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:2,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl")))):
    Pattern match failed: sequential(print(give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))))),print(lookup(assigned(bound("_std")),"std::endl"))),sequential(print("count:2,function:2,result:"),print("fail"),print(lookup(assigned(bound("_std")),"std::endl"))) does not match [PAnnotated (PMetaVar "V") (TName "values"),PMetaVar "Y"]
      sequential(print(give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))))),print(lookup(assigned(bound("_std")),"std::endl"))):
    Pattern match failed: print(give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))))),print(lookup(assigned(bound("_std")),"std::endl")) does not match [PMetaVar "Y"]
    Pattern match failed: print(give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))))),print(lookup(assigned(bound("_std")),"std::endl")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given))))))))):
    Pattern match failed: tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))):
    Pattern match failed: scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?)), "f0" |-> variable(atom(@7),functions(tuples(values*),values)), "f1" |-> variable(atom(@8),functions(tuples(values*),values)), "f2" |-> variable(atom(@9),functions(tuples(values*),values)), "f3" |-> variable(atom(@10),functions(tuples(values*),values)), "m" |-> variable(atom(@6),references(objects())), "main" |-> variable(atom(@11),functions(tuples(values*),values))},scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))):
    Pattern match failed: map-empty,handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given))))):
    Pattern match failed: scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))):
    Pattern match failed: map-empty,give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))):
    Pattern match failed: sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))):
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))):
    Pattern match failed: reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))):
    Pattern match failed: tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))):
    Pattern match failed: scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?))},scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))):
    Pattern match failed: {"rw-lock" |-> variable(atom(@5),syncs()), "self" |-> variable(atom(@13),pointers(objects()))},handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))):
    Pattern match failed: thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))):
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))):
    Pattern match failed: reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))):
    Pattern match failed: tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))):
    Pattern match failed: scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?))},scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))):
    Pattern match failed: {"rw-lock" |-> variable(atom(@5),syncs()), "self" |-> variable(atom(@13),pointers(objects()))},handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))):
    Pattern match failed: thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))):
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))):
    Pattern match failed: reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))):
    Pattern match failed: tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))):
    Pattern match failed: scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?))},scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))):
    Pattern match failed: {"rw-lock" |-> variable(atom(@5),syncs()), "self" |-> variable(atom(@13),pointers(objects()))},handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))):
    Pattern match failed: thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))):
    Pattern match failed: map-empty,give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))):
    Pattern match failed: sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))):
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))):
    Pattern match failed: reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))):
    Pattern match failed: tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))):
    Pattern match failed: scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?))},scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))):
    Pattern match failed: {"rw-lock" |-> variable(atom(@5),syncs()), "self" |-> variable(atom(@13),pointers(objects()))},handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))):
    Pattern match failed: thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))):
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))):
    Pattern match failed: reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))):
    Pattern match failed: tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))):
    Pattern match failed: scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?))},scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))):
    Pattern match failed: {"rw-lock" |-> variable(atom(@5),syncs()), "self" |-> variable(atom(@13),pointers(objects()))},handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))):
    Pattern match failed: thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))):
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))):
    Pattern match failed: reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))):
    Pattern match failed: tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))):
    Pattern match failed: scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?))},scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))):
    Pattern match failed: {"rw-lock" |-> variable(atom(@5),syncs()), "self" |-> variable(atom(@13),pointers(objects()))},handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))):
    Pattern match failed: thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))):
    Pattern match failed: map-empty,give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))):
    Pattern match failed: sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))):
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))):
    Pattern match failed: reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))):
    Pattern match failed: tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))):
    Pattern match failed: scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?))},scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))):
    Pattern match failed: {"rw-lock" |-> variable(atom(@5),syncs()), "self" |-> variable(atom(@13),pointers(objects()))},handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))):
    Pattern match failed: thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))):
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))):
    Pattern match failed: reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))):
    Pattern match failed: tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))):
    Pattern match failed: scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?))},scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))):
    Pattern match failed: {"rw-lock" |-> variable(atom(@5),syncs()), "self" |-> variable(atom(@13),pointers(objects()))},handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))):
    Pattern match failed: thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))):
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))):
    Pattern match failed: reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))):
    Pattern match failed: tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))):
    Pattern match failed: scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?))},scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))):
    Pattern match failed: {"rw-lock" |-> variable(atom(@5),syncs()), "self" |-> variable(atom(@13),pointers(objects()))},handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))):
    Pattern match failed: thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(print(give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))))),print(lookup(assigned(bound("_std")),"std::endl"))):
    Pattern match failed: print(give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))))),print(lookup(assigned(bound("_std")),"std::endl")) does not match [PMetaVar "Y"]
    Pattern match failed: print(give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))))),print(lookup(assigned(bound("_std")),"std::endl")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given))))))))):
    Pattern match failed: tuple,closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))))):
    Pattern match failed: scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?)), "f0" |-> variable(atom(@7),functions(tuples(values*),values)), "f1" |-> variable(atom(@8),functions(tuples(values*),values)), "f2" |-> variable(atom(@9),functions(tuples(values*),values)), "f3" |-> variable(atom(@10),functions(tuples(values*),values)), "m" |-> variable(atom(@6),references(objects())), "main" |-> variable(atom(@11),functions(tuples(values*),values))},scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))))):
    Pattern match failed: map-empty,handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given))))):
    Pattern match failed: scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given)))):
    Pattern match failed: map-empty,give(handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))),sequential(return(given))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")))):
    Pattern match failed: sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))):
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))):
    Pattern match failed: reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))):
    Pattern match failed: tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))):
    Pattern match failed: scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?))},scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))):
    Pattern match failed: {"rw-lock" |-> variable(atom(@5),syncs()), "self" |-> variable(atom(@13),pointers(objects()))},handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))):
    Pattern match failed: thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))):
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))):
    Pattern match failed: reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))):
    Pattern match failed: tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))):
    Pattern match failed: scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))):
    Pattern match failed: {"_std" |-> variable(atom(@1),maps(identifiers(),values?))},scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))):
    Pattern match failed: {"rw-lock" |-> variable(atom(@5),syncs()), "self" |-> variable(atom(@13),pointers(objects()))},handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))):
    Pattern match failed: thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
      sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))):
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PMetaVar "Y"]
    Pattern match failed: stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    no more rules to try
    Pattern match failed: sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      sequential(give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0"))):
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PMetaVar "Y"]
    Pattern match failed: give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))),return(decimal-natural("0")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      give(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))})))))))))):
    Pattern match failed: reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())})),give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-lock-sync(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}))))))))) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      give(tuple(reference(object(atom(@13),"std::shared_mutex",{"rw-lock" |-> variable(atom(@5),syncs())}))),closed(scope("...",scope("...",handle-return(thread-atomic(sequential(stuck,assign(sync-feature(sync({sync-count |-> variable(atom(@4),integers-from(0)), sync-held |-> variable(atom(@3),booleans()), sync-waiting-list |-> variable(atom(@2),lists(values))}),sync-held),false),rw-loc 
INFO:root:deadlock   no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):   no-given(closed(no-given(no-given(handle-abrupt(handle-abrupt(give(thread-id(atom(@1)),handle-abrupt(sequential(sequential(sequential(null-value,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))),while-true(or(is-some-thread-active,is-some-thread-sleeping),sequential(if-else(and(is-equal(set-size(current-active-thread-set),0),is-some-thread-sleeping),force-wake(tuple-elements(sleeping-threads-lowest-v(map-elements(current-sleep-map)))),null),update-thread-stepping,sequential(handle-abrupt(thread-step,sequential(print("thread-step failed"))),increment-n-steps,foreach-thread-try-wake(map-elements(current-sleep-map)))))),handle-abrupt(check(not(is-some-thread-suspended)),abrupt("deadlock")),thread-value(given)),given)),null-value),null-value))))):
INFO:root:deadlock for count 1
INFO:root:generate_a_continue_file file: data/runs/run-20230621-124149/iteration-0-funcons/permutations_shared_mutex.civ continue_counter:2, count:1
INFO:root:found in: try { std::cout << "count:1,function:1,result:" << f0() <<std::endl; } catch (...) { std::cout << "count:1,function:1,result:" << "fail" <<std::endl;}
INFO:root:loc : 1
INFO:root:continue_file : data/runs/run-20230621-124149/iteration-0-funcons/permutations_shared_mutex_cont_2.cpp
INFO:root:Contine civ file data/runs/run-20230621-124149/iteration-0-funcons/permutations_shared_mutex_cont_2
INFO:root:Gen fct:  0, Generating funcons for all .civ files in ./data/runs/run-20230621-124149/iteration-0-funcons
, WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.google.inject.internal.cglib.core.$ReflectUtils$1 (file:/home/l/Documents/year_4/CiviC-Semantics/dependencies/org.metaborg.sunshine2-2.5.16.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)
WARNING: Please consider reporting this to the maintainers of com.google.inject.internal.cglib.core.$ReflectUtils$1
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
12:49:15 INFO  - Building file:///home/l/Documents/year_4/CiviC-Semantics/spoofax-workspace/My-Languages/CIVIC-definition/CIVIC-Tests/data/runs/run-20230621-124149/iteration-0-funcons
12:49:15 INFO  - Building 6 sources, 0 includes of language impl. org.example:CIVIC-Editor:0.1.0-SNAPSHOT
12:49:22 INFO  - permutations_mutex_cont_1.civ
12:49:24 INFO  - permutations_mutex_cont_2.civ
12:49:26 INFO  - permutations_shared_mutex_cont_2.civ
12:49:30 INFO  - permutations_shared_mutex_cont_1.civ
12:49:34 INFO  - permutations_shared_mutex.civ
12:49:37 INFO  - permutations_mutex.civ
12:49:38 INFO  - Build successful

INFO:root:Testing: data/runs/run-20230621-124149/iteration-0-funcons/permutations_shared_mutex_cont_2
                                                                                                                                                                                                                                                                                                          