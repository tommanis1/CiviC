include <iostream>
include <mutex>
std::mutex m;
bool f0(){
    m.lock();
    return 0;
}

int f1(){
    m.unlock();
   return 0;
}

int main() {
print std::endl;
std::cout << "a";
try { std::cout << "count:0,function:1,result:" << f1() <<std::endl; } catch (...) { std::cout << "count:0,function:1,result:" << "fail" <<std::endl;};
//try { std::cout << "count:0,function:1,result:" << f0() <<  std::endl; } catch (...) { std::cout << "count:0,function:1,result:" << "fail" <<std::endl;};
//try { std::cout << "count:1,function:1,result:" << f0() << std::endl; } catch (...) { std::cout << "count:1,function:1,result:" << "fail" <<std::endl;};
return 0;}