initialise-binding initialise-storing initialise-giving finalise-failing finalise-throwing multithread postpone-after-effect scope
  (collateral
     (bind
        ("printInt",
         allocate-variable
           (functions
              (tuples
                 ((values)*),
               values))),
      bind
        ("printFloat",
         allocate-variable
           (functions
              (tuples
                 ((values)*),
               values))),
      bind
        ("printSpaces",
         allocate-variable
           (functions
              (tuples
                 ((values)*),
               values))),
      bind
        ("printNewlines",
         allocate-variable
           (functions
              (tuples
                 ((values)*),
               values))),
      bind
        ("main",
         allocate-variable
           (functions
              (tuples
                 ((values)*),
               values)))),
   sequential
     (assign
        (bound
           ("printInt"),
         function closure
           (scope
              (match
                 (given,
                  tuple
                    (pattern closure
                       (bind
                          ("val",
                           allocate-initialised-variable
                             (values,
                              given))))),
               handle-return
                 (print
                    (assigned
                       (bound
                          ("val"))))))),
      assign
        (bound
           ("printFloat"),
         function closure
           (scope
              (match
                 (given,
                  tuple
                    (pattern closure
                       (bind
                          ("val",
                           allocate-initialised-variable
                             (values,
                              given))))),
               handle-return
                 (print
                    (assigned
                       (bound
                          ("val"))))))),
      assign
        (bound
           ("printSpaces"),
         function closure
           (scope
              (match
                 (given,
                  tuple
                    (pattern closure
                       (bind
                          ("num",
                           allocate-initialised-variable
                             (values,
                              given))))),
               handle-return
                 (print
                    (" "))))),
      assign
        (bound
           ("printNewlines"),
         function closure
           (scope
              (match
                 (given,
                  tuple
                    (pattern closure
                       (bind
                          ("num",
                           allocate-initialised-variable
                             (values,
                              given))))),
               handle-return
                 (print
                    ("
"))))),
      assign
        (bound
           ("main"),
         function closure
           (scope
              (match
                 (given,
                  tuple
                    ( )),
               handle-return
                 (scope
                    (collateral
                       ( ),
                     sequential
                       (( ),
                        scope
                          (bind
                             ("a",
                              allocate-initialised-variable
                                (values,
                                 null)),
                           scope
                             (bind
                                ("m",
                                 allocate-initialised-variable
                                   (values,
                                    decimal-natural
                                      ("10"))),
                              scope
                                (bind
                                   ("n",
                                    allocate-initialised-variable
                                      (values,
                                       decimal-natural
                                         ("5"))),
                                 sequential
                                   (assign
                                      ("a",
                                       decimal-natural
                                         ("10")),
                                    assign
                                      ("m",
                                       decimal-natural
                                         ("5")),
                                    scope
                                      (bind
                                         ("i",
                                          allocate-initialised-variable
                                            (integers,
                                             decimal-natural
                                               ("1"))),
                                       while
                                         (is-less
                                            (assigned
                                               (bound
                                                  ("i")),
                                             decimal-natural
                                               ("10")),
                                          sequential
                                            (sequential
                                               (apply
                                                  (assigned
                                                     (bound
                                                        ("printInt")),
                                                   tuple
                                                     (assigned
                                                        (bound
                                                           ("a")))),
                                                apply
                                                  (assigned
                                                     (bound
                                                        ("printSpaces")),
                                                   tuple
                                                     (decimal-natural
                                                        ("3")))),
                                             assign
                                               (bound
                                                  ("i"),
                                                integer-add
                                                  (assigned
                                                     (bound
                                                        ("i")),
                                                   decimal-natural
                                                     ("1")))))),
                                    apply
                                      (assigned
                                         (bound
                                            ("printNewlines")),
                                       tuple
                                         (decimal-natural
                                            ("1"))),
                                    return
                                      (decimal-natural
                                         ("0")))))))))))),
      apply
        (assigned
           (bound
              ("main")),
         tuple
           ( ))))