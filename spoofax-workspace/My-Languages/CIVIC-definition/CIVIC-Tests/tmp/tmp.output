===== Program =====
===================
  no-given(initialise-generating(initialise-generating(closed(initialise-storing(finalise-failing(multithread(scope(bind("x",allocate-initialised-variable(integers,decimal("64"))),scope(bind("t1",thread-activate(thread-joinable(thunk(closure(assign(bound("x"),checked(int-div(assigned(bound("x")),decimal("2"))))))))),scope(bind("t2",thread-activate(thread-joinable(thunk(closure(assign(bound("x"),int-add(assigned(bound("x")),decimal("10")))))))),sequential(effect(thread-join(bound("t1"))),effect(thread-join(bound("t2"))),assigned(bound("x"))))))))))))):
    Pattern match failed: initialise-generating(initialise-generating(closed(initialise-storing(finalise-failing(multithread(scope(bind("x",allocate-initialised-variable(integers,decimal("64"))),scope(bind("t1",thread-activate(thread-joinable(thunk(closure(assign(bound("x"),checked(int-div(assigned(bound("x")),decimal("2"))))))))),scope(bind("t2",thread-activate(thread-joinable(thunk(closure(assign(bound("x"),int-add(assigned(bound("x")),decimal("10")))))))),sequential(effect(thread-join(bound("t1"))),effect(thread-join(bound("t2"))),assigned(bound("x")))))))))))) does not match [PAnnotated (PMetaVar "U") (TName "values")]
      closed(initialise-storing(finalise-failing(multithread(scope(bind("x",allocate-initialised-variable(integers,decimal("64"))),scope(bind("t1",thread-activate(thread-joinable(thunk(closure(assign(bound("x"),checked(int-div(assigned(bound("x")),decimal("2"))))))))),scope(bind("t2",thread-activate(thread-joinable(thunk(closure(assign(bound("x"),int-add(assigned(bound("x")),decimal("10")))))))),sequential(effect(thread-join(bound("t1"))),effect(thread-join(bound("t2"))),assigned(bound("x")))))))))):
    Pattern match failed: initialise-storing(finalise-failing(multithread(scope(bind("x",allocate-initialised-variable(integers,decimal("64"))),scope(bind("t1",thread-activate(thread-joinable(thunk(closure(assign(bound("x"),checked(int-div(assigned(bound("x")),decimal("2"))))))))),scope(bind("t2",thread-activate(thread-joinable(thunk(closure(assign(bound("x"),int-add(assigned(bound("x")),decimal("10")))))))),sequential(effect(thread-join(bound("t1"))),effect(thread-join(bound("t2"))),assigned(bound("x"))))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      no-given(initialise-generating(finalise-failing(multithread(scope(bind("x",allocate-initialised-variable(integers,decimal("64"))),scope(bind("t1",thread-activate(thread-joinable(thunk(closure(assign(bound("x"),checked(int-div(assigned(bound("x")),decimal("2"))))))))),scope(bind("t2",thread-activate(thread-joinable(thunk(closure(assign(bound("x"),int-add(assigned(bound("x")),decimal("10")))))))),sequential(effect(thread-join(bound("t1"))),effect(thread-join(bound("t2"))),assigned(bound("x")))))))))):
    Pattern match failed: initialise-generating(finalise-failing(multithread(scope(bind("x",allocate-initialised-variable(integers,decimal("64"))),scope(bind("t1",thread-activate(thread-joinable(thunk(closure(assign(bound("x"),checked(int-div(assigned(bound("x")),decimal("2"))))))))),scope(bind("t2",thread-activate(thread-joinable(thunk(closure(assign(bound("x"),int-add(assigned(bound("x")),decimal("10")))))))),sequential(effect(thread-join(bound("t1"))),effect(thread-join(bound("t2"))),assigned(bound("x"))))))))) does not match [PAnnotated (PMetaVar "U") (TName "values")]
      handle-abrupt(multithread(scope(bind("x",allocate-initialised-variable(integers,decimal("64"))),scope(bind("t1",thread-activate(thread-joinable(thunk(closure(assign(bound("x"),checked(int-div(assigned(bound("x")),decimal("2"))))))))),scope(bind("t2",thread-activate(thread-joinable(thunk(closure(assign(bound("x"),int-add(assigned(bound("x")),decimal("10")))))))),sequential(effect(thread-join(bound("t1"))),effect(thread-join(bound("t2"))),assigned(bound("x"))))))),null-value):
    Pattern match failed: multithread(scope(bind("x",allocate-initialised-variable(integers,decimal("64"))),scope(bind("t1",thread-activate(thread-joinable(thunk(closure(assign(bound("x"),checked(int-div(assigned(bound("x")),decimal("2"))))))))),scope(bind("t2",thread-activate(thread-joinable(thunk(closure(assign(bound("x"),int-add(assigned(bound("x")),decimal("10")))))))),sequential(effect(thread-join(bound("t1"))),effect(thread-join(bound("t2"))),assigned(bound("x"))))))),null-value does not match [PAnnotated (PMetaVar "V") (TName "values"),PMetaVar "Y"]
      give(thread-id(atom(@1)),handle-abrupt(sequential(while-true(is-some-thread-active,sequential(update-thread-stepping,thread-step)),check(not(is-some-thread-suspended)),thread-value(given)),given)):
    Pattern match failed: thread-id(atom(@1)),handle-abrupt(sequential(while-true(is-some-thread-active,sequential(update-thread-stepping,thread-step)),check(not(is-some-thread-suspended)),thread-value(given)),given) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      handle-abrupt(sequential(while-true(is-some-thread-active,sequential(update-thread-stepping,thread-step)),check(not(is-some-thread-suspended)),thread-value(given)),given):
    Pattern match failed: sequential(while-true(is-some-thread-active,sequential(update-thread-stepping,thread-step)),check(not(is-some-thread-suspended)),thread-value(given)),given does not match [PAnnotated (PMetaVar "V") (TName "values"),PMetaVar "Y"]
      sequential(while-true(is-some-thread-active,sequential(update-thread-stepping,thread-step)),check(not(is-some-thread-suspended)),thread-value(given)):
    Pattern match failed: while-true(is-some-thread-active,sequential(update-thread-stepping,thread-step)),check(not(is-some-thread-suspended)),thread-value(given) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    Pattern match failed: while-true(is-some-thread-active,sequential(update-thread-stepping,thread-step)),check(not(is-some-thread-suspended)),thread-value(given) does not match [PMetaVar "Y"]
      sequential(sequential(update-thread-stepping,thread-step),while-true(is-some-thread-active,sequential(update-thread-stepping,thread-step))):
    Pattern match failed: sequential(update-thread-stepping,thread-step),while-true(is-some-thread-active,sequential(update-thread-stepping,thread-step)) does not match [PMetaVar "Y"]
    Pattern match failed: sequential(update-thread-stepping,thread-step),while-true(is-some-thread-active,sequential(update-thread-stepping,thread-step)) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      thread-step:
    Pattern match failed: closed(scope("...",scope(bind("x",allocate-initialised-variable(integers,decimal("64"))),scope(bind("t1",thread-activate(thread-joinable(thunk(closure(assign(bound("x"),checked(int-div(assigned(bound("x")),decimal("2"))))))))),scope(bind("t2",thread-activate(thread-joinable(thunk(closure(assign(bound("x"),int-add(assigned(bound("x")),decimal("10")))))))),sequential(effect(thread-join(bound("t1"))),effect(thread-join(bound("t2"))),assigned(bound("x")))))))) does not match [PValue (VPAnnotated (VPMetaVar "V") (TName "values"))]
      closed(scope("...",scope(bind("x",allocate-initialised-variable(integers,decimal("64"))),scope(bind("t1",thread-activate(thread-joinable(thunk(closure(assign(bound("x"),checked(int-div(assigned(bound("x")),decimal("2"))))))))),scope(bind("t2",thread-activate(thread-joinable(thunk(closure(assign(bound("x"),int-add(assigned(bound("x")),decimal("10")))))))),sequential(effect(thread-join(bound("t1"))),effect(thread-join(bound("t2"))),assigned(bound("x")))))))):
    Pattern match failed: scope("...",scope(bind("x",allocate-initialised-variable(integers,decimal("64"))),scope(bind("t1",thread-activate(thread-joinable(thunk(closure(assign(bound("x"),checked(int-div(assigned(bound("x")),decimal("2"))))))))),scope(bind("t2",thread-activate(thread-joinable(thunk(closure(assign(bound("x"),int-add(assigned(bound("x")),decimal("10")))))))),sequential(effect(thread-join(bound("t1"))),effect(thread-join(bound("t2"))),assigned(bound("x"))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope(bind("x",allocate-initialised-variable(integers,decimal("64"))),scope(bind("t1",thread-activate(thread-joinable(thunk(closure(assign(bound("x"),checked(int-div(assigned(bound("x")),decimal("2"))))))))),scope(bind("t2",thread-activate(thread-joinable(thunk(closure(assign(bound("x"),int-add(assigned(bound("x")),decimal("10")))))))),sequential(effect(thread-join(bound("t1"))),effect(thread-join(bound("t2"))),assigned(bound("x"))))))):
    Pattern match failed: map-empty,scope(bind("x",allocate-initialised-variable(integers,decimal("64"))),scope(bind("t1",thread-activate(thread-joinable(thunk(closure(assign(bound("x"),checked(int-div(assigned(bound("x")),decimal("2"))))))))),scope(bind("t2",thread-activate(thread-joinable(thunk(closure(assign(bound("x"),int-add(assigned(bound("x")),decimal("10")))))))),sequential(effect(thread-join(bound("t1"))),effect(thread-join(bound("t2"))),assigned(bound("x")))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope(bind("t1",thread-activate(thread-joinable(thunk(closure(assign(bound("x"),checked(int-div(assigned(bound("x")),decimal("2"))))))))),scope(bind("t2",thread-activate(thread-joinable(thunk(closure(assign(bound("x"),int-add(assigned(bound("x")),decimal("10")))))))),sequential(effect(thread-join(bound("t1"))),effect(thread-join(bound("t2"))),assigned(bound("x")))))):
    Pattern match failed: {"x" |-> variable(atom(@1),integers)},scope(bind("t1",thread-activate(thread-joinable(thunk(closure(assign(bound("x"),checked(int-div(assigned(bound("x")),decimal("2"))))))))),scope(bind("t2",thread-activate(thread-joinable(thunk(closure(assign(bound("x"),int-add(assigned(bound("x")),decimal("10")))))))),sequential(effect(thread-join(bound("t1"))),effect(thread-join(bound("t2"))),assigned(bound("x"))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope(bind("t2",thread-activate(thread-joinable(thunk(closure(assign(bound("x"),int-add(assigned(bound("x")),decimal("10")))))))),sequential(effect(thread-join(bound("t1"))),effect(thread-join(bound("t2"))),assigned(bound("x"))))):
    Pattern match failed: {"t1" |-> thread-id(atom(@2))},scope(bind("t2",thread-activate(thread-joinable(thunk(closure(assign(bound("x"),int-add(assigned(bound("x")),decimal("10")))))))),sequential(effect(thread-join(bound("t1"))),effect(thread-join(bound("t2"))),assigned(bound("x")))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",sequential(effect(thread-join(bound("t1"))),effect(thread-join(bound("t2"))),assigned(bound("x")))):
    Pattern match failed: {"t2" |-> thread-id(atom(@3))},sequential(effect(thread-join(bound("t1"))),effect(thread-join(bound("t2"))),assigned(bound("x"))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      sequential(effect(thread-join(bound("t2"))),assigned(bound("x"))):
    Pattern match failed: effect(thread-join(bound("t2"))),assigned(bound("x")) does not match [PMetaVar "Y"]
    Pattern match failed: effect(thread-join(bound("t2"))),assigned(bound("x")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      thread-join(thread-id(atom(@3))):
    equality condition fails with thread(thunk(abstraction(closed(scope("...",assign(bound("x"),int-add(assigned(bound("x")),decimal("10"))))))),[]) and 
    Pattern match failed:  does not match [TPVar "TI"]
    equality condition fails with false and true
    Pattern match failed: thread(thunk(abstraction(closed(scope("...",assign(bound("x"),int-add(assigned(bound("x")),decimal("10"))))))),[]) does not match [PADT "thread" [VPMetaVar "TH"]]
    Pattern match failed: thread(thunk(abstraction(closed(scope("...",scope(bind("x",allocate-initialised-variable(integers,decimal("64"))),scope(bind("t1",thread-activate(thread-joinable(thunk(closure(assign(bound("x"),checked(int-div(assigned(bound("x")),decimal("2"))))))))),scope(bind("t2",thread-activate(thread-joinable(thunk(closure(assign(bound("x"),int-add(assigned(bound("x")),decimal("10")))))))),sequential(effect(thread-join(bound("t1"))),effect(thread-join(bound("t2"))),assigned(bound("x")))))))))),[]) does not match [PADT "thread" [PADT "thunk" [PADT "abstraction" [VPMetaVar "X"]]]]
      sequential(while-true(is-some-thread-active,sequential(update-thread-stepping,thread-step)),check(not(is-some-thread-suspended)),thread-value(given)):
    Pattern match failed: while-true(is-some-thread-active,sequential(update-thread-stepping,thread-step)),check(not(is-some-thread-suspended)),thread-value(given) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    Pattern match failed: while-true(is-some-thread-active,sequential(update-thread-stepping,thread-step)),check(not(is-some-thread-suspended)),thread-value(given) does not match [PMetaVar "Y"]
      sequential(sequential(update-thread-stepping,thread-step),while-true(is-some-thread-active,sequential(update-thread-stepping,thread-step))):
    Pattern match failed: sequential(update-thread-stepping,thread-step),while-true(is-some-thread-active,sequential(update-thread-stepping,thread-step)) does not match [PMetaVar "Y"]
    Pattern match failed: sequential(update-thread-stepping,thread-step),while-true(is-some-thread-active,sequential(update-thread-stepping,thread-step)) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      thread-step:
    Pattern match failed: closed(scope("...",scope(bind("x",allocate-initialised-variable(integers,decimal("64"))),scope(bind("t1",thread-activate(thread-joinable(thunk(closure(assign(bound("x"),checked(int-div(assigned(bound("x")),decimal("2"))))))))),scope(bind("t2",thread-activate(thread-joinable(thunk(closure(assign(bound("x"),int-add(assigned(bound("x")),decimal("10")))))))),sequential(effect(thread-join(bound("t1"))),effect(thread-join(bound("t2"))),assigned(bound("x")))))))) does not match [PValue (VPAnnotated (VPMetaVar "V") (TName "values"))]
      closed(scope("...",scope(bind("x",allocate-initialised-variable(integers,decimal("64"))),scope(bind("t1",thread-activate(thread-joinable(thunk(closure(assign(bound("x"),checked(int-div(assigned(bound("x")),decimal("2"))))))))),scope(bind("t2",thread-activate(thread-joinable(thunk(closure(assign(bound("x"),int-add(assigned(bound("x")),decimal("10")))))))),sequential(effect(thread-join(bound("t1"))),effect(thread-join(bound("t2"))),assigned(bound("x")))))))):
    Pattern match failed: scope("...",scope(bind("x",allocate-initialised-variable(integers,decimal("64"))),scope(bind("t1",thread-activate(thread-joinable(thunk(closure(assign(bound("x"),checked(int-div(assigned(bound("x")),decimal("2"))))))))),scope(bind("t2",thread-activate(thread-joinable(thunk(closure(assign(bound("x"),int-add(assigned(bound("x")),decimal("10")))))))),sequential(effect(thread-join(bound("t1"))),effect(thread-join(bound("t2"))),assigned(bound("x"))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope(bind("x",allocate-initialised-variable(integers,decimal("64"))),scope(bind("t1",thread-activate(thread-joinable(thunk(closure(assign(bound("x"),checked(int-div(assigned(bound("x")),decimal("2"))))))))),scope(bind("t2",thread-activate(thread-joinable(thunk(closure(assign(bound("x"),int-add(assigned(bound("x")),decimal("10")))))))),sequential(effect(thread-join(bound("t1"))),effect(thread-join(bound("t2"))),assigned(bound("x"))))))):
    Pattern match failed: map-empty,scope(bind("x",allocate-initialised-variable(integers,decimal("64"))),scope(bind("t1",thread-activate(thread-joinable(thunk(closure(assign(bound("x"),checked(int-div(assigned(bound("x")),decimal("2"))))))))),scope(bind("t2",thread-activate(thread-joinable(thunk(closure(assign(bound("x"),int-add(assigned(bound("x")),decimal("10")))))))),sequential(effect(thread-join(bound("t1"))),effect(thread-join(bound("t2"))),assigned(bound("x")))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope(bind("t1",thread-activate(thread-joinable(thunk(closure(assign(bound("x"),checked(int-div(assigned(bound("x")),decimal("2"))))))))),scope(bind("t2",thread-activate(thread-joinable(thunk(closure(assign(bound("x"),int-add(assigned(bound("x")),decimal("10")))))))),sequential(effect(thread-join(bound("t1"))),effect(thread-join(bound("t2"))),assigned(bound("x")))))):
    Pattern match failed: {"x" |-> variable(atom(@1),integers)},scope(bind("t1",thread-activate(thread-joinable(thunk(closure(assign(bound("x"),checked(int-div(assigned(bound("x")),decimal("2"))))))))),scope(bind("t2",thread-activate(thread-joinable(thunk(closure(assign(bound("x"),int-add(assigned(bound("x")),decimal("10")))))))),sequential(effect(thread-join(bound("t1"))),effect(thread-join(bound("t2"))),assigned(bound("x"))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope(bind("t2",thread-activate(thread-joinable(thunk(closure(assign(bound("x"),int-add(assigned(bound("x")),decimal("10")))))))),sequential(effect(thread-join(bound("t1"))),effect(thread-join(bound("t2"))),assigned(bound("x"))))):
    Pattern match failed: {"t1" |-> thread-id(atom(@2))},scope(bind("t2",thread-activate(thread-joinable(thunk(closure(assign(bound("x"),int-add(assigned(bound("x")),decimal("10")))))))),sequential(effect(thread-join(bound("t1"))),effect(thread-join(bound("t2"))),assigned(bound("x")))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",sequential(effect(thread-join(bound("t1"))),effect(thread-join(bound("t2"))),assigned(bound("x")))):
    Pattern match failed: {"t2" |-> thread-id(atom(@3))},sequential(effect(thread-join(bound("t1"))),effect(thread-join(bound("t2"))),assigned(bound("x"))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      sequential(effect(thread-join(bound("t2"))),assigned(bound("x"))):
    Pattern match failed: effect(thread-join(bound("t2"))),assigned(bound("x")) does not match [PMetaVar "Y"]
    Pattern match failed: effect(thread-join(bound("t2"))),assigned(bound("x")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      thread-join(thread-id(atom(@3))):
    equality condition fails with thread(thunk(abstraction(closed(scope("...",assign(bound("x"),int-add(assigned(bound("x")),decimal("10"))))))),[]) and 
    Pattern match failed:  does not match [TPVar "TI"]
    equality condition fails with false and true
    Pattern match failed: thread(thunk(abstraction(closed(scope("...",assign(bound("x"),int-add(assigned(bound("x")),decimal("10"))))))),[]) does not match [PADT "thread" [VPMetaVar "TH"]]
    Pattern match failed: thread(thunk(abstraction(closed(scope("...",scope(bind("x",allocate-initialised-variable(integers,decimal("64"))),scope(bind("t1",thread-activate(thread-joinable(thunk(closure(assign(bound("x"),checked(int-div(assigned(bound("x")),decimal("2"))))))))),scope(bind("t2",thread-activate(thread-joinable(thunk(closure(assign(bound("x"),int-add(assigned(bound("x")),decimal("10")))))))),sequential(effect(thread-join(bound("t1"))),effect(thread-join(bound("t2"))),assigned(bound("x")))))))))),[]) does not match [PADT "thread" [PADT "thunk" [PADT "abstraction" [VPMetaVar "X"]]]]
      give(thread-id(atom(@1)),handle-abrupt(sequential(while-true(is-some-thread-active,sequential(update-thread-stepping,thread-step)),check(not(is-some-thread-suspended)),thread-value(given)),given)):
    Pattern match failed: thread-id(atom(@1)),handle-abrupt(sequential(while-true(is-some-thread-active,sequential(update-thread-stepping,thread-step)),check(not(is-some-thread-suspended)),thread-value(given)),given) does not match [PAnnotated PWildCard (TName "values"),PAnnotated (PMetaVar "W") (TName "values")]
      handle-abrupt(sequential(while-true(is-some-thread-active,sequential(update-thread-stepping,thread-step)),check(not(is-some-thread-suspended)),thread-value(given)),given):
    Pattern match failed: sequential(while-true(is-some-thread-active,sequential(update-thread-stepping,thread-step)),check(not(is-some-thread-suspended)),thread-value(given)),given does not match [PAnnotated (PMetaVar "V") (TName "values"),PMetaVar "Y"]
      sequential(while-true(is-some-thread-active,sequential(update-thread-stepping,thread-step)),check(not(is-some-thread-suspended)),thread-value(given)):
    Pattern match failed: while-true(is-some-thread-active,sequential(update-thread-stepping,thread-step)),check(not(is-some-thread-suspended)),thread-value(given) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    Pattern match failed: while-true(is-some-thread-active,sequential(update-thread-stepping,thread-step)),check(not(is-some-thread-suspended)),thread-value(given) does not match [PMetaVar "Y"]
      sequential(sequential(update-thread-stepping,thread-step),while-true(is-some-thread-active,sequential(update-thread-stepping,thread-step))):
    Pattern match failed: sequential(update-thread-stepping,thread-step),while-true(is-some-thread-active,sequential(update-thread-stepping,thread-step)) does not match [PMetaVar "Y"]
    Pattern match failed: sequential(update-thread-stepping,thread-step),while-true(is-some-thread-active,sequential(update-thread-stepping,thread-step)) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      thread-step:
    Pattern match failed: closed(scope("...",scope(bind("x",allocate-initialised-variable(integers,decimal("64"))),scope(bind("t1",thread-activate(thread-joinable(thunk(closure(assign(bound("x"),checked(int-div(assigned(bound("x")),decimal("2"))))))))),scope(bind("t2",thread-activate(thread-joinable(thunk(closure(assign(bound("x"),int-add(assigned(bound("x")),decimal("10")))))))),sequential(effect(thread-join(bound("t1"))),effect(thread-join(bound("t2"))),assigned(bound("x")))))))) does not match [PValue (VPAnnotated (VPMetaVar "V") (TName "values"))]
      closed(scope("...",scope(bind("x",allocate-initialised-variable(integers,decimal("64"))),scope(bind("t1",thread-activate(thread-joinable(thunk(closure(assign(bound("x"),checked(int-div(assigned(bound("x")),decimal("2"))))))))),scope(bind("t2",thread-activate(thread-joinable(thunk(closure(assign(bound("x"),int-add(assigned(bound("x")),decimal("10")))))))),sequential(effect(thread-join(bound("t1"))),effect(thread-join(bound("t2"))),assigned(bound("x")))))))):
    Pattern match failed: scope("...",scope(bind("x",allocate-initialised-variable(integers,decimal("64"))),scope(bind("t1",thread-activate(thread-joinable(thunk(closure(assign(bound("x"),checked(int-div(assigned(bound("x")),decimal("2"))))))))),scope(bind("t2",thread-activate(thread-joinable(thunk(closure(assign(bound("x"),int-add(assigned(bound("x")),decimal("10")))))))),sequential(effect(thread-join(bound("t1"))),effect(thread-join(bound("t2"))),assigned(bound("x"))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope(bind("x",allocate-initialised-variable(integers,decimal("64"))),scope(bind("t1",thread-activate(thread-joinable(thunk(closure(assign(bound("x"),checked(int-div(assigned(bound("x")),decimal("2"))))))))),scope(bind("t2",thread-activate(thread-joinable(thunk(closure(assign(bound("x"),int-add(assigned(bound("x")),decimal("10")))))))),sequential(effect(thread-join(bound("t1"))),effect(thread-join(bound("t2"))),assigned(bound("x"))))))):
    Pattern match failed: map-empty,scope(bind("x",allocate-initialised-variable(integers,decimal("64"))),scope(bind("t1",thread-activate(thread-joinable(thunk(closure(assign(bound("x"),checked(int-div(assigned(bound("x")),decimal("2"))))))))),scope(bind("t2",thread-activate(thread-joinable(thunk(closure(assign(bound("x"),int-add(assigned(bound("x")),decimal("10")))))))),sequential(effect(thread-join(bound("t1"))),effect(thread-join(bound("t2"))),assigned(bound("x")))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope(bind("t1",thread-activate(thread-joinable(thunk(closure(assign(bound("x"),checked(int-div(assigned(bound("x")),decimal("2"))))))))),scope(bind("t2",thread-activate(thread-joinable(thunk(closure(assign(bound("x"),int-add(assigned(bound("x")),decimal("10")))))))),sequential(effect(thread-join(bound("t1"))),effect(thread-join(bound("t2"))),assigned(bound("x")))))):
    Pattern match failed: {"x" |-> variable(atom(@1),integers)},scope(bind("t1",thread-activate(thread-joinable(thunk(closure(assign(bound("x"),checked(int-div(assigned(bound("x")),decimal("2"))))))))),scope(bind("t2",thread-activate(thread-joinable(thunk(closure(assign(bound("x"),int-add(assigned(bound("x")),decimal("10")))))))),sequential(effect(thread-join(bound("t1"))),effect(thread-join(bound("t2"))),assigned(bound("x"))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope(bind("t2",thread-activate(thread-joinable(thunk(closure(assign(bound("x"),int-add(assigned(bound("x")),decimal("10")))))))),sequential(effect(thread-join(bound("t1"))),effect(thread-join(bound("t2"))),assigned(bound("x"))))):
    Pattern match failed: {"t1" |-> thread-id(atom(@2))},scope(bind("t2",thread-activate(thread-joinable(thunk(closure(assign(bound("x"),int-add(assigned(bound("x")),decimal("10")))))))),sequential(effect(thread-join(bound("t1"))),effect(thread-join(bound("t2"))),assigned(bound("x")))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",sequential(effect(thread-join(bound("t1"))),effect(thread-join(bound("t2"))),assigned(bound("x")))):
    Pattern match failed: {"t2" |-> thread-id(atom(@3))},sequential(effect(thread-join(bound("t1"))),effect(thread-join(bound("t2"))),assigned(bound("x"))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      sequential(effect(thread-join(bound("t2"))),assigned(bound("x"))):
    Pattern match failed: effect(thread-join(bound("t2"))),assigned(bound("x")) does not match [PMetaVar "Y"]
    Pattern match failed: effect(thread-join(bound("t2"))),assigned(bound("x")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      thread-join(thread-id(atom(@3))):
    equality condition fails with thread(thunk(abstraction(closed(scope("...",assign(bound("x"),int-add(assigned(bound("x")),decimal("10"))))))),[]) and 
    Pattern match failed:  does not match [TPVar "TI"]
    equality condition fails with false and true
    Pattern match failed: thread(thunk(abstraction(closed(scope("...",assign(bound("x"),int-add(assigned(bound("x")),decimal("10"))))))),[]) does not match [PADT "thread" [VPMetaVar "TH"]]
    Pattern match failed: thread(thunk(abstraction(closed(scope("...",scope(bind("x",allocate-initialised-variable(integers,decimal("64"))),scope(bind("t1",thread-activate(thread-joinable(thunk(closure(assign(bound("x"),checked(int-div(assigned(bound("x")),decimal("2"))))))))),scope(bind("t2",thread-activate(thread-joinable(thunk(closure(assign(bound("x"),int-add(assigned(bound("x")),decimal("10")))))))),sequential(effect(thread-join(bound("t1"))),effect(thread-join(bound("t2"))),assigned(bound("x")))))))))),[]) does not match [PADT "thread" [PADT "thunk" [PADT "abstraction" [VPMetaVar "X"]]]]
      sequential(while-true(is-some-thread-active,sequential(update-thread-stepping,thread-step)),check(not(is-some-thread-suspended)),thread-value(given)):
    Pattern match failed: while-true(is-some-thread-active,sequential(update-thread-stepping,thread-step)),check(not(is-some-thread-suspended)),thread-value(given) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
    Pattern match failed: while-true(is-some-thread-active,sequential(update-thread-stepping,thread-step)),check(not(is-some-thread-suspended)),thread-value(given) does not match [PMetaVar "Y"]
      sequential(sequential(update-thread-stepping,thread-step),while-true(is-some-thread-active,sequential(update-thread-stepping,thread-step))):
    Pattern match failed: sequential(update-thread-stepping,thread-step),while-true(is-some-thread-active,sequential(update-thread-stepping,thread-step)) does not match [PMetaVar "Y"]
    Pattern match failed: sequential(update-thread-stepping,thread-step),while-true(is-some-thread-active,sequential(update-thread-stepping,thread-step)) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      thread-step:
    Pattern match failed: closed(scope("...",scope(bind("x",allocate-initialised-variable(integers,decimal("64"))),scope(bind("t1",thread-activate(thread-joinable(thunk(closure(assign(bound("x"),checked(int-div(assigned(bound("x")),decimal("2"))))))))),scope(bind("t2",thread-activate(thread-joinable(thunk(closure(assign(bound("x"),int-add(assigned(bound("x")),decimal("10")))))))),sequential(effect(thread-join(bound("t1"))),effect(thread-join(bound("t2"))),assigned(bound("x")))))))) does not match [PValue (VPAnnotated (VPMetaVar "V") (TName "values"))]
      closed(scope("...",scope(bind("x",allocate-initialised-variable(integers,decimal("64"))),scope(bind("t1",thread-activate(thread-joinable(thunk(closure(assign(bound("x"),checked(int-div(assigned(bound("x")),decimal("2"))))))))),scope(bind("t2",thread-activate(thread-joinable(thunk(closure(assign(bound("x"),int-add(assigned(bound("x")),decimal("10")))))))),sequential(effect(thread-join(bound("t1"))),effect(thread-join(bound("t2"))),assigned(bound("x")))))))):
    Pattern match failed: scope("...",scope(bind("x",allocate-initialised-variable(integers,decimal("64"))),scope(bind("t1",thread-activate(thread-joinable(thunk(closure(assign(bound("x"),checked(int-div(assigned(bound("x")),decimal("2"))))))))),scope(bind("t2",thread-activate(thread-joinable(thunk(closure(assign(bound("x"),int-add(assigned(bound("x")),decimal("10")))))))),sequential(effect(thread-join(bound("t1"))),effect(thread-join(bound("t2"))),assigned(bound("x"))))))) does not match [PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope(bind("x",allocate-initialised-variable(integers,decimal("64"))),scope(bind("t1",thread-activate(thread-joinable(thunk(closure(assign(bound("x"),checked(int-div(assigned(bound("x")),decimal("2"))))))))),scope(bind("t2",thread-activate(thread-joinable(thunk(closure(assign(bound("x"),int-add(assigned(bound("x")),decimal("10")))))))),sequential(effect(thread-join(bound("t1"))),effect(thread-join(bound("t2"))),assigned(bound("x"))))))):
    Pattern match failed: map-empty,scope(bind("x",allocate-initialised-variable(integers,decimal("64"))),scope(bind("t1",thread-activate(thread-joinable(thunk(closure(assign(bound("x"),checked(int-div(assigned(bound("x")),decimal("2"))))))))),scope(bind("t2",thread-activate(thread-joinable(thunk(closure(assign(bound("x"),int-add(assigned(bound("x")),decimal("10")))))))),sequential(effect(thread-join(bound("t1"))),effect(thread-join(bound("t2"))),assigned(bound("x")))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope(bind("t1",thread-activate(thread-joinable(thunk(closure(assign(bound("x"),checked(int-div(assigned(bound("x")),decimal("2"))))))))),scope(bind("t2",thread-activate(thread-joinable(thunk(closure(assign(bound("x"),int-add(assigned(bound("x")),decimal("10")))))))),sequential(effect(thread-join(bound("t1"))),effect(thread-join(bound("t2"))),assigned(bound("x")))))):
    Pattern match failed: {"x" |-> variable(atom(@1),integers)},scope(bind("t1",thread-activate(thread-joinable(thunk(closure(assign(bound("x"),checked(int-div(assigned(bound("x")),decimal("2"))))))))),scope(bind("t2",thread-activate(thread-joinable(thunk(closure(assign(bound("x"),int-add(assigned(bound("x")),decimal("10")))))))),sequential(effect(thread-join(bound("t1"))),effect(thread-join(bound("t2"))),assigned(bound("x"))))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",scope(bind("t2",thread-activate(thread-joinable(thunk(closure(assign(bound("x"),int-add(assigned(bound("x")),decimal("10")))))))),sequential(effect(thread-join(bound("t1"))),effect(thread-join(bound("t2"))),assigned(bound("x"))))):
    Pattern match failed: {"t1" |-> thread-id(atom(@2))},scope(bind("t2",thread-activate(thread-joinable(thunk(closure(assign(bound("x"),int-add(assigned(bound("x")),decimal("10")))))))),sequential(effect(thread-join(bound("t1"))),effect(thread-join(bound("t2"))),assigned(bound("x")))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      scope("...",sequential(effect(thread-join(bound("t1"))),effect(thread-join(bound("t2"))),assigned(bound("x")))):
    Pattern match failed: {"t2" |-> thread-id(atom(@3))},sequential(effect(thread-join(bound("t1"))),effect(thread-join(bound("t2"))),assigned(bound("x"))) does not match [PAnnotated PWildCard (TName "environments"),PAnnotated (PMetaVar "V") (TName "values")]
      sequential(effect(thread-join(bound("t2"))),assigned(bound("x"))):
    Pattern match failed: effect(thread-join(bound("t2"))),assigned(bound("x")) does not match [PMetaVar "Y"]
    Pattern match failed: effect(thread-join(bound("t2"))),assigned(bound("x")) does not match [PValue (PADT "null-value" []),PSeqVar "Y+" PlusOp]
      thread-join(thread-id(atom(@3))):
    equality condition fails with thread(thunk(abstraction(closed(scope("...",assign(bound("x"),int-add(assigned(bound("x")),decimal("10"))))))),[]) and 
    Pattern match failed:  does not match [TPVar "TI"]
    equality condition fails with false and true
    Pattern match failed: thread(thunk(abstraction(closed(scope("...",assign(bound("x"),int-add(assigned(bound("x")),decimal("10"))))))),[]) does not match [PADT "thread" [VPMetaVar "TH"]]
    Pattern match failed: thread(thunk(abstraction(closed(scope("...",scope(bind("x",allocate-initialised-variable(integers,decimal("64"))),scope(bind("t1",thread-activate(thread-joinable(thunk(closure(assign(bound("x"),checked(int-div(assigned(bound("x")),decimal("2"))))))))),scope(bind("t2",thread-activate(thread-joinable(thunk(closure(assign(bound("x"),int-add(assigned(bound("x")),decimal("10")))))))),sequential(effect(thread-join(bound("t1"))),effect(thread-join(bound("t2"))),assigned(bound("x")))))))))),[]) does not match [PADT "thread" [PADT "thunk" [PADT "abstraction" [VPMetaVar "X"]]]]
