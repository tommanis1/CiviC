initialise-binding initialise-storing initialise-giving finalise-failing finalise-throwing multithread postpone-after-effect scope
  (collateral
     (bind
        ("printInt",
         allocate-variable
           (functions
              (tuples
                 ((values)*),
               values))),
      bind
        ("printNewlines",
         allocate-variable
           (functions
              (tuples
                 ((values)*),
               values))),
      bind
        ("main",
         allocate-variable
           (functions
              (tuples
                 ((values)*),
               values)))),
   sequential
     (assign
        (bound
           ("printInt"),
         function closure
           (scope
              (match
                 (given,
                  tuple
                    (pattern closure
                       (bind
                          ("val",
                           allocate-initialised-variable
                             (values,
                              given))))),
               handle-return
                 (print
                    (assigned
                       (bound
                          ("val"))))))),
      assign
        (bound
           ("printNewlines"),
         function closure
           (scope
              (match
                 (given,
                  tuple
                    (pattern closure
                       (bind
                          ("num",
                           allocate-initialised-variable
                             (values,
                              given))))),
               handle-return
                 (print
                    ("
"))))),
      assign
        (bound
           ("main"),
         function closure
           (scope
              (match
                 (given,
                  tuple
                    ( )),
               handle-return
                 (scope
                    (bind
                       ("a",
                        allocate-initialised-variable
                          (values,
                           decimal-natural
                             ("1"))),
                     sequential
                       (apply
                          (assigned
                             (bound
                                ("printInt")),
                           tuple
                             (assigned
                                (bound
                                   ("a")))),
                        apply
                          (assigned
                             (bound
                                ("printNewlines")),
                           tuple
                             (decimal-natural
                                ("10"))),
                        apply
                          (assigned
                             (bound
                                ("printInt")),
                           tuple
                             (assigned
                                (bound
                                   ("a")))),
                        return
                          (decimal-natural
                             ("0")))))))),
      apply
        (assigned
           (bound
              ("main")),
         tuple
           ( ))))