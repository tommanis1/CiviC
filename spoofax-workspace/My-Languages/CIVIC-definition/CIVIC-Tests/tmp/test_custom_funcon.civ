include <iostream>
include <thread>
include <mutex>
 
int g_num = 0;  // protected by g_num_mutex
std::mutex g_num_mutex;
 
void slow_increment(int id) 
{
	g_num_mutex.lock(); 
    for (int i = 0, 10) {
        g_num = g_num + 1;
        // note, that the mutex also syncronizes the output
        print id;
        print g_num;
        print 100;
//        std::cout << id << g_num << std::endl;
 
    }
     g_num_mutex.unlock();
}
 
int main()
{
    std::thread t{slow_increment, 0};
    std::thread tt{slow_increment, 1};
//    t.join();
//    tt.join();
    return 0;
    }