initialise-binding initialise-storing initialise-giving initialise-memos finalise-failing finalise-throwing multithread postpone-after-effect scope
  (bind
     ("_std",
      allocate-initialised-variable
        (environments,
         map
           ( ))),
   sequential
     (assign
        (bound "_std",
         map-unite
           (assigned
              (bound
                 ("_std")),
            {"std::endl" |-> "
",
             "std::cout" |-> print})),
      ( ),
      assign
        (bound "_std",
         map-unite
           (assigned
              (bound
                 ("_std")),
            {"std::mutex" |-> class
                                (thunk closure reference object
                                   (fresh-atom,
                                    "std::mutex",
                                    {"self" |-> allocate-initialised-variable
                                                  (syncs,
                                                   exclusive-lock-create)}),
                                 {"lock" |-> function closure sequential
                                               (print
                                                  ("1"),
                                                exclusive-lock-sync-else-wait
                                                  (assigned
                                                     (lookup
                                                        (object-single-inheritance-feature-map checked dereference first tuple-elements
                                                           given,
                                                         "self")))),
                                  "unlock" |-> function closure sequential
                                                 (exclusive-lock-release
                                                    (assigned
                                                       (lookup
                                                          (object-single-inheritance-feature-map checked dereference first tuple-elements
                                                             given,
                                                           "self"))))})})),
      ( ),
      ( ),
      ( ),
      ( ),
      scope
        (collateral
           (( ),
            ( ),
            ( ),
            bind
              ("g_num",
               allocate-initialised-variable
                 (values,
                  decimal-natural
                    ("0"))),
            bind
              ("g_num_mutex",
               force class-instantiator lookup
                 (assigned
                    (bound
                       ("_std")),
                  "std::mutex")),
            bind
              ("slow_increment",
               allocate-variable
                 (functions
                    (tuples
                       ((values)*),
                     values))),
            bind
              ("main",
               allocate-variable
                 (functions
                    (tuples
                       ((values)*),
                     values)))),
         sequential
           (( ),
            ( ),
            ( ),
            ( ),
            ( ),
            assign
              (bound
                 ("slow_increment"),
               function closure
                 (scope
                    (match
                       (given,
                        tuple
                          (pattern closure
                             (bind
                                ("id",
                                 allocate-initialised-variable
                                   (values,
                                    given))))),
                     handle-return
                       (scope
                          (collateral
                             ( ),
                           sequential
                             (( ),
                              give
                                (bound
                                   ("g_num_mutex"),
                                 apply
                                   (lookup
                                      (class-feature-map lookup
                                         (assigned
                                            (bound
                                               ("_std")),
                                          object-class-name checked dereference
                                            given),
                                       "lock"),
                                    tuple
                                      (given,
                                       ( )))),
                              scope
                                (bind
                                   ("i",
                                    allocate-initialised-variable
                                      (integers,
                                       decimal-natural
                                         ("0"))),
                                 while
                                   (is-less
                                      (assigned
                                         (bound
                                            ("i")),
                                       decimal-natural
                                         ("10")),
                                    sequential
                                      (sequential
                                         (assign
                                            (bound
                                               ("g_num"),
                                             else
                                               (int-add
                                                  (assigned
                                                     (bound
                                                        ("g_num")),
                                                   decimal-natural
                                                     ("1")),
                                                float-add
                                                  (assigned
                                                     (bound
                                                        ("g_num")),
                                                   decimal-natural
                                                     ("1")))),
                                          print("id"),
                                          print
                                            (assigned
                                               (bound
                                                  ("id"))),
                                           print("num"),
                                          print
                                            (assigned
                                               (bound
                                                  ("g_num"))),
                                          print
                                            (decimal-natural
                                               ("100"))),
                                       assign
                                         (bound
                                            ("i"),
                                          integer-add
                                            (assigned
                                               (bound
                                                  ("i")),
                                             decimal-natural
                                               ("1")))))),
                              give
                                (bound
                                   ("g_num_mutex"),
                                 apply
                                   (lookup
                                      (class-feature-map lookup
                                         (assigned
                                            (bound
                                               ("_std")),
                                          object-class-name checked dereference
                                            given),
                                       "unlock"),
                                    tuple
                                      (given,
                                       ( )))))))))),
            assign
              (bound
                 ("main"),
               function closure
                 (scope
                    (match
                       (given,
                        tuple
                          ( )),
                     handle-return
                       (scope
                          (collateral
                             (bind
                                ("t",
                                 allocate-initialised-variable
                                   (values,
                                    null)),
                              bind
                                ("tt",
                                 allocate-initialised-variable
                                   (values,
                                    null)),
                              ( )),
                           sequential
                             (( ),
                              assign
                                (bound
                                   ("t"),
                                 allocate-index thread-activate thread-joinable postpone-after-effect supply
                                   (assigned
                                      (bound
                                         ("slow_increment")),
                                    tuple
                                      (decimal-natural
                                         ("0")))),
                              assign
                                (bound
                                   ("tt"),
                                 allocate-index thread-activate thread-joinable postpone-after-effect supply
                                   (assigned
                                      (bound
                                         ("slow_increment")),
                                    tuple
                                      (decimal-natural
                                         ("1")))),
                              return
                                (decimal-natural
                                   ("0")))))))),
            apply
              (assigned
                 (bound
                    ("main")),
               tuple
                 ( ))))))